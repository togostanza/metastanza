{"version":3,"file":"graph-3d-grid.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/graph-3d-grid/index.js"],"sourcesContent":["import Stanza from \"togostanza/stanza\";\nimport * as d3 from \"d3\";\nimport { _3d } from \"d3-3d\";\nimport loadData from \"togostanza-utils/load-data\";\nimport ToolTip from \"@/lib/ToolTip\";\nimport prepareGraphData, {\n  get3DEdges,\n  getGroupPlanes,\n} from \"@/lib/prepareGraphData\";\nimport {\n  downloadSvgMenuItem,\n  downloadPngMenuItem,\n  downloadJSONMenuItem,\n  downloadCSVMenuItem,\n  downloadTSVMenuItem,\n  appendCustomCss,\n} from \"togostanza-utils\";\n\nexport default class GridGraph extends Stanza {\n  menu() {\n    return [\n      downloadSvgMenuItem(this, \"graph-3d-grid\"),\n      downloadPngMenuItem(this, \"graph-3d-grid\"),\n      downloadJSONMenuItem(this, \"graph-3d-grid\", this._data),\n      downloadCSVMenuItem(this, \"graph-3d-grid\", this._data),\n      downloadTSVMenuItem(this, \"graph-3d-grid\", this._data),\n    ];\n  }\n\n  async render() {\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const css = (key) => getComputedStyle(this.element).getPropertyValue(key);\n\n    //data\n\n    const width = parseInt(this.params[\"width\"]);\n    const height = parseInt(this.params[\"height\"]);\n\n    this.renderTemplate({\n      template: \"stanza.html.hbs\",\n    });\n\n    const values = await loadData(\n      this.params[\"data-url\"],\n      this.params[\"data-type\"],\n      this.root.querySelector(\"main\")\n    );\n\n    this._data = values;\n\n    const nodes = values.nodes;\n    const edges = values.links;\n\n    const MARGIN = {\n      TOP: this.params[\"padding\"],\n      BOTTOM: this.params[\"padding\"],\n      LEFT: this.params[\"padding\"],\n      RIGHT: this.params[\"padding\"],\n    };\n    const HEIGHT = height - MARGIN.TOP - MARGIN.BOTTOM;\n    const WIDTH = width - MARGIN.LEFT - MARGIN.RIGHT;\n\n    // Setting color scale\n    const togostanzaColors = [];\n    for (let i = 0; i < 6; i++) {\n      togostanzaColors.push(css(`--togostanza-series-${i}-color`));\n    }\n    const color = function () {\n      return d3.scaleOrdinal().range(togostanzaColors);\n    };\n\n    const root = this.root.querySelector(\"main\");\n    const el = this.root.getElementById(\"graph-3d-grid\");\n\n    const existingSvg = root.getElementsByTagName(\"svg\")[0];\n    if (existingSvg) {\n      existingSvg.remove();\n    }\n    const svg = d3\n      .select(el)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    this.tooltip = new ToolTip();\n    root.append(this.tooltip);\n\n    const groupPlaneColorParams = {\n      basedOn: this.params[\"group-plane-color-based-on\"],\n      // default fixed color by css\n    };\n\n    const groupsSortParams = {\n      sortBy: this.params[\"group-planes-sort-by\"],\n      sortOrder: this.params[\"group-planes-sort-order\"] || \"ascending\",\n    };\n\n    const nodesSortParams = {\n      sortBy: this.params[\"nodes-sort-by\"],\n      sortOrder: this.params[\"nodes-sort-order\"] || \"ascending\",\n    };\n\n    const nodeSizeParams = {\n      basedOn: this.params[\"node-size-based-on\"] || \"fixed\",\n      dataKey: this.params[\"node-size-data-key\"] || \"\",\n      fixedSize: this.params[\"node-fixed-size\"] || 3,\n      minSize: this.params[\"node-min-size\"],\n      maxSize: this.params[\"node-max-size\"],\n    };\n    const nodeColorParams = {\n      basedOn: this.params[\"node-color-based-on\"] || \"fixed\",\n      dataKey: this.params[\"node-color-data-key\"] || \"\",\n    };\n\n    const edgeWidthParams = {\n      basedOn: this.params[\"edge-width-based-on\"] || \"fixed\",\n      dataKey: this.params[\"edge-width-data-key\"] || \"\",\n      fixedWidth: this.params[\"edge-fixed-width\"] || 1,\n      minWidth: this.params[\"edge-min-width\"],\n      maxWidth: this.params[\"edge-max-width\"],\n    };\n\n    const edgeColorParams = {\n      basedOn: this.params[\"edge-color-based-on\"] || \"fixed\",\n      dataKey: this.params[\"edge-color-data-key\"] || \"\",\n    };\n\n    const tooltipParams = {\n      dataKey: this.params[\"nodes-tooltip-data-key\"],\n      show: nodes.some((d) => d[this.params[\"nodes-tooltip-data-key\"]]),\n    };\n\n    const highlightAdjEdges = this.params[\"highlight-adjacent-edges\"] || false;\n    const highlightGroupPlanes = this.params[\"highlight-group-planes\"] || false;\n\n    const params = {\n      MARGIN,\n      width,\n      height,\n      svg,\n      color,\n      highlightAdjEdges,\n      nodeSizeParams,\n      nodesSortParams,\n      groupsSortParams,\n      nodeColorParams,\n      edgeWidthParams,\n      edgeColorParams,\n      tooltipParams,\n    };\n\n    const { prepNodes, prepEdges, groupHash, symbols } = prepareGraphData(\n      nodes,\n      edges,\n      params\n    );\n\n    const origin = [MARGIN.LEFT + WIDTH / 2, MARGIN.TOP + HEIGHT / 2];\n    const scale = 0.75;\n\n    let isDragging = false;\n\n    const key = function (d) {\n      return d.id;\n    };\n\n    const startAngle = (Math.PI * 8) / 180;\n\n    const svgG = svg\n      .call(\n        d3.drag().on(\"drag\", dragged).on(\"start\", dragStart).on(\"end\", dragEnd)\n      )\n      .append(\"g\");\n\n    var mx, my, mouseX, mouseY;\n\n    const point3d = _3d()\n      .x(function (d) {\n        return d.x;\n      })\n      .y(function (d) {\n        return d.y;\n      })\n      .z(function (d) {\n        return d.z;\n      })\n      .origin(origin)\n      .rotateY(startAngle)\n      .rotateX(-startAngle)\n      .scale(scale);\n\n    const edge3d = _3d()\n      .scale(scale)\n      .origin(origin)\n      .shape(\"LINE\")\n\n      .rotateY(startAngle)\n      .rotateX(-startAngle);\n\n    const plane3d = _3d()\n      .shape(\"PLANE\")\n      .origin(origin)\n      .rotateY(startAngle)\n      .rotateX(-startAngle)\n      .scale(scale);\n\n    function processData(data) {\n      const planes = svgG.selectAll(\"path\").data(data[2], (d) => d.groupId);\n\n      planes\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"_3d\")\n        .classed(\"group-plane\", true)\n        .merge(planes)\n        .attr(\"style\", (d) => `fill: ${d.color}`)\n        .attr(\"d\", plane3d.draw)\n        .sort(plane3d.sort);\n\n      planes.exit().remove();\n      const linesStrip = svgG\n        .selectAll(\"line\")\n        .data(data[1], (d) => d.edge[symbols.idSym]);\n\n      linesStrip\n        .enter()\n        .append(\"line\")\n        .attr(\"class\", \"_3d\")\n        .classed(\"link\", true)\n        .merge(linesStrip)\n        .style(\"stroke\", (d) => d.edge[symbols.edgeColorSym])\n        .style(\"stroke-width\", (d) => d.edge[symbols.edgeWidthSym])\n        .attr(\"x1\", (d) => d.edge[symbols.sourceNodeSym].projected.x)\n        .attr(\"y1\", (d) => d.edge[symbols.sourceNodeSym].projected.y)\n        .attr(\"x2\", (d) => d.edge[symbols.targetNodeSym].projected.x)\n        .attr(\"y2\", (d) => d.edge[symbols.targetNodeSym].projected.y)\n        .sort(edge3d.sort);\n\n      linesStrip.exit().remove();\n\n      const points = svgG.selectAll(\"circle\").data(data[0], key);\n\n      const p = points\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"_3d\")\n        .classed(\"node\", true)\n        .merge(points)\n        .attr(\"cx\", posPointX)\n        .attr(\"cy\", posPointY)\n        .attr(\"r\", (d) => d[symbols.nodeSizeSym])\n        .style(\"stroke\", (d) => d[symbols.nodeBorderColorSym])\n        .style(\"fill\", (d) => d[symbols.nodeColorSym])\n        .sort(point3d.sort);\n\n      if (tooltipParams.show) {\n        p.attr(\"data-tooltip\", (d) => d[tooltipParams.dataKey]);\n      }\n\n      points.exit().remove();\n    }\n\n    function posPointX(d) {\n      return d.projected.x;\n    }\n\n    function posPointY(d) {\n      return d.projected.y;\n    }\n\n    let groupPlanes = [];\n\n    let edgesWithCoords = [];\n\n    function isNumeric(str) {\n      if (typeof str !== \"string\") {\n        return false;\n      } // we only process strings!\n      return (\n        !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n        !isNaN(parseFloat(str))\n      ); // ...and ensure strings of whitespace fail\n    }\n\n    function init() {\n      // Add x,y,z of source and target nodes to 3D edges\n      edgesWithCoords = get3DEdges(prepEdges);\n\n      // Laying out nodes=========\n      const DEPTH = HEIGHT;\n\n      // Check if group ids is a numbers. (To make group hash, group ids are all converted to strings by doing \"\" + groupId)\n      const ifGroupIdsIsNumber = Object.keys(groupHash).every((groupId) =>\n        isNumeric(groupId)\n      );\n\n      let modificator;\n      if (ifGroupIdsIsNumber) {\n        modificator = (str) => parseInt(str);\n      } else {\n        modificator = (str) => str;\n      }\n\n      const yPointScale = d3.scalePoint([-DEPTH / 2, DEPTH / 2]).domain(\n        Object.keys(groupHash).sort((a, b) => {\n          if (modificator(a) > modificator(b)) {\n            return groupsSortParams.sortOrder === \"ascending\" ? 1 : -1;\n          }\n          if (modificator(a) < modificator(b)) {\n            return groupsSortParams.sortOrder === \"ascending\" ? -1 : 1;\n          }\n          return 0;\n        })\n      );\n\n      const offset = WIDTH * 0.1;\n      Object.keys(groupHash).forEach((gKey) => {\n        let ii = 0;\n        let jj = 0;\n\n        const group = groupHash[gKey];\n        const gridSize = Math.ceil(Math.sqrt(groupHash[gKey].length));\n\n        const dx = (WIDTH - 2 * offset) / (gridSize - 1);\n        const dz = (WIDTH - 2 * offset) / (gridSize - 1);\n\n        group.forEach((node, index) => {\n          if (group.length === 1) {\n            node.x = 0;\n            node.z = 0;\n            node.y = yPointScale(gKey);\n            return;\n          } else if (group.length === 2) {\n            node.x = 0 + index * (WIDTH / 3) - WIDTH / 6;\n            node.z = 0;\n            node.y = yPointScale(gKey);\n            jj++;\n            return;\n          }\n          if (jj < gridSize) {\n            node.x = offset + jj * dx - WIDTH / 2;\n            node.z = offset + ii * dz - WIDTH / 2;\n            node.y = yPointScale(gKey);\n            jj++;\n          } else {\n            jj = 0;\n            ii++;\n            node.x = offset + jj * dx - WIDTH / 2;\n            node.z = offset + ii * dz - WIDTH / 2;\n            node.y = yPointScale(gKey);\n            jj++;\n          }\n        });\n      });\n\n      groupPlanes = getGroupPlanes(groupHash, {\n        WIDTH,\n        HEIGHT,\n        DEPTH,\n        color,\n        yPointScale,\n        groupPlaneColorParams,\n      });\n\n      const data = [\n        point3d(prepNodes),\n        edge3d(edgesWithCoords),\n        plane3d(groupPlanes),\n      ];\n\n      processData(data);\n\n      const planes = svgG.selectAll(\"path.group-plane\");\n      const points = svgG.selectAll(\"circle.node\");\n      const links = svgG.selectAll(\"line.link\");\n\n      if (highlightGroupPlanes) {\n        addPlanesHighlight(planes, points, links);\n      }\n\n      if (highlightAdjEdges) {\n        addEdgesHighlight(points, links);\n      }\n    }\n\n    function dragStart(e) {\n      isDragging = true;\n      mx = e.x;\n      my = e.y;\n    }\n\n    function dragged(e) {\n      let alpha = 0;\n      let beta = 0;\n\n      mouseX = mouseX || 0;\n      mouseY = mouseY || 0;\n      beta = ((e.x - mx + mouseX) * Math.PI) / 230;\n      alpha = (((e.y - my + mouseY) * Math.PI) / 230) * -1;\n      const data = [\n        point3d.rotateY(beta + startAngle).rotateX(alpha - startAngle)(\n          prepNodes\n        ),\n        edge3d.rotateY(beta + startAngle).rotateX(alpha - startAngle)(\n          edgesWithCoords\n        ),\n        plane3d.rotateY(beta + startAngle).rotateX(alpha - startAngle)(\n          groupPlanes\n        ),\n      ];\n      processData(data);\n    }\n\n    function dragEnd(e) {\n      isDragging = false;\n      mouseX = e.x - mx + mouseX;\n      mouseY = e.y - my + mouseY;\n    }\n\n    function addPlanesHighlight(planes, points, links) {\n      planes.on(\"mouseover\", function (_e, d) {\n        if (isDragging) {\n          return;\n        }\n\n        const group = d.group;\n\n        const nodesIdsInGroup = group.map((node) => node.id);\n\n        const edgesConnectedToThisGroup = prepEdges.filter((edge) => {\n          return (\n            nodesIdsInGroup.includes(edge.source) ||\n            nodesIdsInGroup.includes(edge.target)\n          );\n        });\n\n        const sourcesGroups = edgesConnectedToThisGroup.map(\n          (edge) => \"\" + edge[symbols.sourceNodeSym].group\n        );\n        const targetsGroups = edgesConnectedToThisGroup.map(\n          (edge) => \"\" + edge[symbols.targetNodeSym].group\n        );\n\n        const connectedTargetNodes = edgesConnectedToThisGroup.map(\n          (edge) => edge.target\n        );\n\n        const connectedSourceNodes = edgesConnectedToThisGroup.map(\n          (edge) => edge.source\n        );\n\n        const allConnectedNodes = [\n          ...new Set([...connectedTargetNodes, ...connectedSourceNodes]),\n        ];\n        const connectedNodes = allConnectedNodes.filter(\n          (nodeId) => !nodesIdsInGroup.includes(nodeId)\n        );\n\n        const allGroups = [...new Set([...sourcesGroups, ...targetsGroups])];\n        const connectedGroups = allGroups.filter(\n          (group) => group !== d.groupId\n        );\n\n        planes.classed(\"fadeout\", true);\n        planes.classed(\"active\", false);\n        planes.classed(\"half-active\", false);\n\n        planes\n          .filter((p) => {\n            return connectedGroups.includes(p.groupId);\n          })\n          .classed(\"fadeout\", false)\n          .classed(\"half-active\", true);\n\n        d3.select(this).classed(\"active\", true).classed(\"fadeout\", false);\n\n        // highlight nodes belonging to this group\n        points.classed(\"fadeout\", true);\n        points.classed(\"active\", false);\n        points.classed(\"half-active\", false);\n\n        points\n          .filter((p) => {\n            return nodesIdsInGroup.includes(p.id);\n          })\n          .classed(\"fadeout\", false)\n          .classed(\"active\", true);\n\n        points\n          .filter((p) => {\n            return connectedNodes.includes(\"\" + p.id);\n          })\n          .classed(\"fadeout\", false)\n          .classed(\"half-active\", true);\n\n        // highlight edges that belongs to this group\n        links.classed(\"fadeout\", true);\n\n        links\n          .filter((p) => {\n            return (\n              (connectedNodes.includes(p.edge[symbols.sourceNodeSym].id) ||\n                connectedNodes.includes(p.edge[symbols.targetNodeSym].id)) &&\n              (nodesIdsInGroup.includes(p.edge[symbols.sourceNodeSym].id) ||\n                nodesIdsInGroup.includes(p.edge[symbols.targetNodeSym].id))\n            );\n          })\n          .classed(\"fadeout\", false)\n          .classed(\"half-active\", true)\n          .classed(\"dashed\", true);\n\n        links\n          .filter(\n            (p) =>\n              nodesIdsInGroup.includes(p.edge[symbols.sourceNodeSym].id) &&\n              nodesIdsInGroup.includes(p.edge[symbols.targetNodeSym].id)\n          )\n          .classed(\"fadeout\", false)\n          .classed(\"active\", true);\n      });\n\n      planes.on(\"mouseleave\", () => {\n        if (isDragging) {\n          return;\n        }\n        links.classed(\"fadeout\", false);\n        links.classed(\"active\", false);\n        links.classed(\"half-active\", false);\n        links.classed(\"dashed\", false);\n        planes.classed(\"active\", false);\n        planes.classed(\"fadeout\", false);\n        planes.classed(\"half-active\", false);\n        points.classed(\"fadeout\", false);\n        points.classed(\"active\", false);\n        points.classed(\"half-active\", false);\n      });\n    }\n\n    function addEdgesHighlight(points, links) {\n      points.on(\"mouseover\", function (e, d) {\n        if (isDragging) {\n          return;\n        }\n\n        // fade out all other nodes, highlight a little connected ones\n        points.classed(\"fadeout\", true);\n\n        points\n          .filter((p) => {\n            return (\n              p !== d &&\n              d[symbols.edgeSym].some(\n                (edge) =>\n                  edge[symbols.sourceNodeSym] === p ||\n                  edge[symbols.targetNodeSym] === p\n              )\n            );\n          })\n          .classed(\"half-active\", true)\n          .classed(\"fadeout\", false);\n\n        // highlight current node\n        d3.select(this).classed(\"active\", true).classed(\"fadeout\", false);\n        const edgeIdsOnThisNode = d[symbols.edgeSym].map(\n          (edge) => edge[symbols.idSym]\n        );\n\n        // fadeout not connected edges, highlight connected ones\n        links\n          .classed(\n            \"fadeout\",\n            (p) => !edgeIdsOnThisNode.includes(p.edge[symbols.idSym])\n          )\n          .classed(\"active\", (p) =>\n            edgeIdsOnThisNode.includes(p.edge[symbols.idSym])\n          );\n      });\n\n      points.on(\"mouseleave\", function () {\n        if (isDragging) {\n          return;\n        }\n        links\n          .classed(\"active\", false)\n          .classed(\"fadeout\", false)\n          .classed(\"half-active\", false);\n        points\n          .classed(\"active\", false)\n          .classed(\"fadeout\", false)\n          .classed(\"half-active\", false);\n      });\n    }\n\n    init();\n\n    if (tooltipParams.show) {\n      this.tooltip.setup(el.querySelectorAll(\"[data-tooltip]\"));\n    }\n  }\n}\n"],"names":["d3.scaleOrdinal","d3\n      .select","d3.drag","d3.scalePoint","d3.select"],"mappings":"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"}