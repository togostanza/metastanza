{"version":3,"file":"chord-diagram.js","sources":["../../../home/runner/work/metastanza/metastanza/node_modules/d3-chord/src/math.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-chord/src/chord.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-chord/src/array.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-chord/src/constant.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-chord/src/ribbon.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-fetch/src/json.js","../../../home/runner/work/metastanza/metastanza/stanzas/chord-diagram/index.js"],"sourcesContent":["export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import Stanza from \"togostanza/stanza\";\nimport * as d3 from \"d3\";\n\nexport default class ChordDiagram extends Stanza {\n  async render() {\n\n    // geometry\n    // window.getComputedStyle(this.element).getPropertyValue('--width')\n    const [width, height] = [this.params[\"width\"], this.params[\"height\"]];\n    const innerRadius = Math.min(width, height) * 0.5 - 20;\n    const outerRadius = innerRadius + 6;\n    const formatValue = (x) => `${x.toFixed(0)}B`;\n\n    const _svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    this.root.querySelector(\"main\").append(_svg);\n    const svg = d3.select(_svg);\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // data\n    const data = await (() => {\n      // console.log(this.params[\"data-url\"])\n      switch (this.params[\"data-type\"]) {\n        case \"json\":\n          // return d3.json('./chord-diagram/assets/directed-graph-data.json', (data) => data);\n          return d3.json(this.params[\"data-url\"], (data) => data);\n        case \"tsv\":\n          return d3.tsv(this.params[\"data-url\"], (data) => data);\n      }\n      // switch (this.params[\"data-type\"]) {\n      //   case \"json\":\n      //     return d3.json(this.params[\"data-url\"], (data) => data);\n      //   case \"tsv\":\n      //     return d3.tsv(this.params[\"data-url\"], (data) => data);\n      // }\n    })();\n    const names = Array.from(\n      new Set(data.flatMap((d) => [d.source, d.target]))\n    );\n    // console.log(names)\n    const matrix = (() => {\n      const index = new Map(names.map((name, i) => [name, i]));\n      const matrix = Array.from(index, () => new Array(names.length).fill(0));\n      for (const { source, target, value } of data) {\n        matrix[index.get(source)][index.get(target)] += value;\n      }\n      return matrix;\n    })();\n    // console.log(matrix)\n\n    // prepare some D3 objects\n    const color = {\n      count: names.length,\n      hue(index) {\n        return (1 / this.count) * index;\n      },\n      hsl(index) {\n        return `hsl(${this.hue(index)}turn, 70%, 60%)`;\n      },\n    };\n\n    // const color = d3.scaleOrdinal(names, d3.schemeCategory10)\n    const ribbon = d3\n      .ribbonArrow()\n      .radius(innerRadius - this.params[\"edge-offset\"])\n      .padAngle(1 / innerRadius);\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n    const chord = d3\n      .chordDirected()\n      .padAngle(this.params[\"arcs-gap\"] / innerRadius)\n      .sortSubgroups(d3.descending)\n      .sortChords(d3.descending);\n    const chords = chord(matrix);\n\n    const fullsircleId = `fullsircle${new Date().getTime()}`;\n\n    const rootGroup = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${[width * 0.5, height * 0.5]})`);\n\n    rootGroup\n      .append(\"path\")\n      .classed(\"fullsircle\", true)\n      .attr(\"id\", fullsircleId)\n      .attr(\n        \"d\",\n        d3.arc()({ outerRadius, startAngle: 0, endAngle: 2 * Math.PI })\n      );\n\n    rootGroup\n      .append(\"g\")\n      .classed(\"ribbons\", true)\n      .selectAll(\"g\")\n      .data(chords)\n      .join(\"path\")\n      .attr(\"d\", ribbon)\n      // .attr('fill', d => color(names[d.target.index]))\n      .attr(\"fill\", (d) => color.hsl(d.target.index))\n      .append(\"title\")\n      .text(\n        (d) =>\n          `${names[d.source.index]} owes ${names[d.target.index]} ${formatValue(\n            d.source.value\n          )}`\n      );\n\n    rootGroup\n      .append(\"g\")\n      .classed(\"arcs\", true)\n      .selectAll(\"g\")\n      .data(chords.groups)\n      .join(\"g\")\n      .call((g) =>\n        g\n          .append(\"path\")\n          .attr(\"d\", arc)\n          // .attr('fill', d => color(names[d.index]))\n          .attr(\"fill\", (d) => color.hsl(d.index))\n          .attr(\"stroke\", \"#fff\")\n      )\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"dy\", -3)\n          .append(\"textPath\")\n          // .attr('xlink:href', textId.href)\n          .attr(\"xlink:href\", () => `#${fullsircleId}`)\n          .attr(\"startOffset\", (d) => d.startAngle * outerRadius)\n          .text((d) => names[d.index])\n      )\n      .call((g) =>\n        g.append(\"title\").text(\n          (d) => `${names[d.index]}\n          owes ${formatValue(d3.sum(matrix[d.index]))}\n          is owed ${formatValue(d3.sum(matrix, (row) => row[d.index]))}`\n        )\n      );\n  }\n}\n"],"names":["d3.select","d3.json","d3.tsv","d3\n      .ribbonArrow","d3.arc","d3\n      .chordDirected","d3.descending","d3.sum"],"mappings":"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"}