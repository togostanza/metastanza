{"version":3,"file":"barchart.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/barchart/index.js"],"sourcesContent":["import Stanza from \"togostanza/stanza\";\n\nimport vegaEmbed from \"vega-embed\";\nimport loadData from \"@/lib/load-data\";\nimport {\n  downloadSvgMenuItem,\n  downloadPngMenuItem,\n} from \"@/lib/metastanza_utils.js\";\n\nexport default class Barchart extends Stanza {\n  menu() {\n    return [\n      downloadSvgMenuItem(this, \"barchart\"),\n      downloadPngMenuItem(this, \"barchart\"),\n    ];\n  }\n\n  async render() {\n    const css = (key) => getComputedStyle(this.element).getPropertyValue(key);\n\n    const chartType = this.params[\"chart-type\"];\n\n    //width,height,padding\n    const width = this.params[\"width\"];\n    const height = this.params[\"height\"];\n    const padding = this.params[\"padding\"];\n\n    //data\n    const labelVariable = this.params[\"category\"]; //x\n    const valueVariable = this.params[\"value\"]; //y\n    const groupVariable = this.params[\"group-by\"]\n      ? this.params[\"group-by\"]\n      : \"none\"; //z\n\n    const values = await loadData(\n      this.params[\"data-url\"],\n      this.params[\"data-type\"]\n    );\n\n    function constructData(chartType) {\n      switch (chartType) {\n        case \"grouped\":\n          return [\n            {\n              name: \"table\",\n              values,\n            },\n          ];\n        case \"stacked\":\n          return [\n            {\n              name: \"table\",\n              values,\n              transform: [\n                {\n                  type: \"stack\",\n                  field: valueVariable,\n                  groupby: [labelVariable],\n                  sort: { field: groupVariable },\n                },\n              ],\n            },\n          ];\n      }\n    }\n\n    const getTitle = (\n      stackedParamsTitle,\n      stackedDefaultTitle,\n      groupedParamsTitle,\n      groupedDefaultTitle\n    ) => {\n      switch (chartType) {\n        case \"stacked\":\n          return stackedParamsTitle === \"\"\n            ? stackedDefaultTitle\n            : stackedParamsTitle;\n        case \"grouped\":\n          return groupedParamsTitle === \"\"\n            ? groupedDefaultTitle\n            : groupedParamsTitle;\n      }\n    };\n\n    const axes = [\n      {\n        scale: \"xscale\",\n        orient: this.params[\"xaxis-placement\"],\n        domainColor: \"var(--togostanza-axis-color)\",\n        domainWidth: css(\"--togostanza-axis-width\"),\n        grid: this.params[\"xgrid\"] === \"true\",\n        gridColor: \"var(--togostanza-grid-color)\",\n        gridDash: css(\"--togostanza-grid-dash-length\"),\n        gridOpacity: css(\"--togostanza-grid-opacity\"),\n        gridWidth: css(\"--togostanza-grid-width\"),\n        ticks: this.params[\"xtick\"] === \"true\",\n        tickColor: \"var(--togostanza-tick-color)\",\n        tickSize: css(\"--togostanza-tick-length\"),\n        tickWidth: css(\"--togostanza-tick-width\"),\n        title: getTitle(\n          this.params[\"category-title\"],\n          labelVariable,\n          this.params[\"value-title\"],\n          valueVariable\n        ),\n        titleColor: \"var(--togostanza-title-font-color)\",\n        titleFont: css(\"--togostanza-font-family\"),\n        titleFontSize: css(\"--togostanza-title-font-size\"),\n        titleFontWeight: css(\"--togostanza-title-font-weight\"),\n        titlePadding: this.params[\"xtitle-padding\"],\n        labelPadding: this.params[\"xlabel-padding\"],\n        labelAlign: this.params[\"xlabel-alignment\"],\n        labelLimit: this.params[\"xlabel-max-width\"],\n        encode: {\n          labels: {\n            interactive: true,\n            update: {\n              angle: { value: this.params[\"xlabel-angle\"] },\n              fill: { value: \"var(--togostanza-label-font-color)\" },\n              font: { value: css(\"--togostanza-font-family\") },\n              fontSize: { value: css(\"--togostanza-label-font-size\") },\n            },\n          },\n        },\n      },\n      {\n        scale: \"yscale\",\n        orient: this.params[\"yaxis-placement\"],\n        domainColor: \"var(--togostanza-axis-color)\",\n        domainWidth: css(\"--togostanza-axis-width\"),\n        grid: this.params[\"ygrid\"] === \"true\",\n        gridColor: \"var(--togostanza-grid-color)\",\n        gridDash: css(\"--togostanza-grid-dash-length\"),\n        gridOpacity: css(\"--togostanza-grid-opacity\"),\n        gridWidth: css(\"--togostanza-grid-width\"),\n        ticks: this.params[\"ytick\"] === \"true\",\n        tickColor: \"var(--togostanza-tick-color)\",\n        tickSize: css(\"--togostanza-tick-length\"),\n        tickWidth: css(\"--togostanza-tick-width\"),\n        title: getTitle(\n          this.params[\"value-title\"],\n          valueVariable,\n          this.params[\"category-title\"],\n          labelVariable\n        ),\n        titleColor: \"var(--togostanza-title-font-color)\",\n        titleFont: css(\"--togostanza-font-family\"),\n        titleFontSize: css(\"--togostanza-title-font-size\"),\n        titleFontWeight: css(\"--togostanza-title-font-weight\"),\n        titlePadding: this.params[\"ytitle-padding\"],\n        labelPadding: this.params[\"ylabel-padding\"],\n        labelAlign: this.params[\"ylabel-alignment\"],\n        labelLimit: this.params[\"ylabel-max-width\"],\n        zindex: 0,\n        encode: {\n          labels: {\n            interactive: true,\n            update: {\n              angle: { value: this.params[\"ylabel-angle\"] },\n              fill: { value: \"var(--togostanza-label-font-color)\" },\n              font: {\n                value: css(\"--togostanza-font-family\"),\n              },\n              fontSize: { value: css(\"--togostanza-label-font-size\") },\n            },\n          },\n        },\n      },\n    ];\n\n    // legend\n    const legends = [\n      {\n        fill: \"color\",\n        orient: \"none\",\n        legendX: this.params[\"legend-padding\"]\n          ? width + this.params[\"legend-padding\"]\n          : width + 18,\n        title: getTitle(\n          this.params[\"legend-title\"],\n          groupVariable,\n          this.params[\"legend-title\"],\n          groupVariable\n        ),\n        titleColor: \"var(--togostanza-title-font-color)\",\n        titleFont: css(\"--togostanza-font-family\"),\n        titleFontSize: css(\"--togostanza-title-font-size\"),\n        titleFontWeight: css(\"--togostanza-title-font-weight\"),\n        labelColor: \"var(--togostanza-label-font-color)\",\n        labelFont: css(\"--togostanza-font-family\"),\n        labelFontSize: css(\"--togostanza-label-font-size\"),\n        symbolStrokeColor: css(\"--togostanza-border-color\"),\n        symbolStrokeWidth: css(\"--togostanza-border-width\"),\n        symbolLimit: \"2000\",\n      },\n    ];\n\n    const colorScale = {\n      name: \"color\",\n      type: \"ordinal\",\n      domain: { data: \"table\", field: groupVariable },\n      range: [\n        \"var(--togostanza-series-0-color)\",\n        \"var(--togostanza-series-1-color)\",\n        \"var(--togostanza-series-2-color)\",\n        \"var(--togostanza-series-3-color)\",\n        \"var(--togostanza-series-4-color)\",\n        \"var(--togostanza-series-5-color)\",\n      ],\n    };\n\n    const constructScale = (chartType) => {\n      switch (chartType) {\n        case \"grouped\":\n          return [\n            colorScale,\n            {\n              name: \"xscale\",\n              type: \"linear\",\n              domain: { data: \"table\", field: valueVariable },\n              range: \"width\",\n            },\n            {\n              name: \"yscale\",\n              type: \"band\",\n              domain: { data: \"table\", field: labelVariable },\n              range: \"height\",\n              padding: 0.2,\n              paddingInner: this.params[\"padding-inner\"],\n              paddingOuter: this.params[\"padding-outer\"],\n            },\n          ];\n        case \"stacked\":\n          return [\n            colorScale,\n            {\n              name: \"xscale\",\n              type: \"band\",\n              range: \"width\",\n              domain: { data: \"table\", field: labelVariable },\n              paddingInner: this.params[\"padding-inner\"],\n              paddingOuter: this.params[\"padding-outer\"],\n            },\n            {\n              name: \"yscale\",\n              type: \"linear\",\n              range: \"height\",\n              nice: true,\n              zero: true,\n              domain: { data: \"table\", field: \"y1\" },\n            },\n          ];\n      }\n    };\n\n    const constructMark = (chartType) => {\n      switch (chartType) {\n        case \"grouped\":\n          return [\n            {\n              type: \"group\",\n              from: {\n                facet: {\n                  data: \"table\",\n                  name: \"facet\",\n                  groupby: labelVariable,\n                },\n              },\n              encode: {\n                enter: {\n                  y: { scale: \"yscale\", field: labelVariable },\n                },\n              },\n              signals: [{ name: \"height\", update: \"bandwidth('yscale')\" }],\n              scales: [\n                {\n                  name: \"pos\",\n                  type: \"band\",\n                  range: \"height\",\n                  domain: { data: \"facet\", field: groupVariable },\n                },\n              ],\n              marks: [\n                {\n                  name: \"bars\",\n                  from: { data: \"facet\" },\n                  type: \"rect\",\n                  encode: {\n                    enter: {\n                      y: { scale: \"pos\", field: groupVariable },\n                      height: { scale: \"pos\", band: 1 },\n                      x: { scale: \"xscale\", field: valueVariable },\n                      x2: { scale: \"xscale\", value: 0 },\n                      fill: { scale: \"color\", field: groupVariable },\n                      stroke: { value: \"var(--togostanza-border-color)\" },\n                      strokeWidth: { value: css(\"--togostanza-border-width\") },\n                    },\n                  },\n                },\n              ],\n            },\n          ];\n        case \"stacked\":\n          return [\n            {\n              type: \"group\",\n              from: { data: \"table\" },\n              encode: {\n                enter: {\n                  x: { scale: \"xscale\", field: labelVariable },\n                  width: { scale: \"xscale\", band: this.params[\"bar-width\"] },\n                  y: { scale: \"yscale\", field: \"y0\" },\n                  y2: { scale: \"yscale\", field: \"y1\" },\n                  fill: { scale: \"color\", field: groupVariable },\n                  stroke: { value: \"var(--togostanza-border-color)\" },\n                  strokeWidth: { value: css(\"--togostanza-border-width\") },\n                },\n              },\n            },\n          ];\n      }\n    };\n\n    const spec = {\n      $schema: \"https://vega.github.io/schema/vega/v5.json\",\n      width,\n      height,\n      padding,\n      data: constructData(chartType),\n      scales: constructScale(chartType),\n      axes,\n      legends:\n        this.params[\"legend\"] === \"true\" && this.params[\"group-by\"]\n          ? legends\n          : [],\n      marks: constructMark(chartType),\n    };\n\n    const el = this.root.querySelector(\"main\");\n    const opts = {\n      renderer: \"svg\",\n    };\n    await vegaEmbed(el, spec, opts);\n  }\n}\n"],"names":["vegaEmbed"],"mappings":"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"}