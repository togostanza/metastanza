{"version":3,"file":"treemap.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/treemap/uid.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/shadeColor.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/treemapBinaryLog.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/index.js"],"sourcesContent":["var count = 0;\n\nexport default function (name) {\n  return new Id(\"O-\" + (name === null ? \"\" : name + \"-\") + ++count);\n}\n\nfunction Id(id) {\n  this.id = id;\n  this.href = new URL(`#${id}`, location) + \"\";\n}\n\nId.prototype.toString = function () {\n  return \"url(\" + this.href + \")\";\n};\n","//color darkening/lightening function\n\nexport default function (color, percent) {\n  const trimmedColor = color.trim();\n  let R = parseInt(trimmedColor.substring(1, 3), 16);\n  let G = parseInt(trimmedColor.substring(3, 5), 16);\n  let B = parseInt(trimmedColor.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  const RR =\n    R.toString(16).length === 1 ? \"0\" + R.toString(16) : R.toString(16);\n  const GG =\n    G.toString(16).length === 1 ? \"0\" + G.toString(16) : G.toString(16);\n  const BB =\n    B.toString(16).length === 1 ? \"0\" + B.toString(16) : B.toString(16);\n\n  return \"#\" + RR + GG + BB;\n}\n","//tiling function with log scale support\nexport default function (parent, x0, y0, x1, y1) {\n  const nodes = parent.children,\n    n = nodes.length,\n    sums = new Array(n + 1);\n\n  let i, sum;\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value2;\n  }\n\n  let nodeSum = 0;\n  let kkk = -1;\n\n  while (++kkk < n) {\n    nodeSum += nodes[kkk].value2;\n  }\n  kkk = -1;\n\n  partition(0, n, nodeSum, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      const node = nodes[i];\n      (node.x0 = x0), (node.y0 = y0);\n      (node.x1 = x1), (node.y1 = y1);\n      return;\n    }\n\n    const valueOffset = sums[i],\n      valueTarget = value / 2 + valueOffset;\n\n    let k = i + 1,\n      hi = j - 1;\n\n    while (k < hi) {\n      const mid = (k + hi) >>> 1;\n      if (sums[mid] < valueTarget) {\n        k = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n\n    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) {\n      --k;\n    }\n\n    const valueLeft = sums[k] - valueOffset,\n      valueRight = value - valueLeft;\n\n    if (x1 - x0 > y1 - y0) {\n      const xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      const yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import Stanza from \"togostanza/stanza\";\nimport * as d3 from \"d3\";\nimport uid from \"./uid\";\nimport loadData from \"togostanza-utils/load-data\"; //\"@/lib/load-data\";\n\nimport {\n  downloadSvgMenuItem,\n  downloadPngMenuItem,\n  downloadJSONMenuItem,\n  downloadCSVMenuItem,\n  downloadTSVMenuItem,\n  appendCustomCss,\n} from \"togostanza-utils\"; // from \"@/lib/metastanza_utils.js\"; //\nimport shadeColor from \"./shadeColor\";\nimport treemapBinaryLog from \"./treemapBinaryLog\";\n\nexport default class TreeMapStanza extends Stanza {\n  menu() {\n    return [\n      downloadSvgMenuItem(this, \"treemap\"),\n      downloadPngMenuItem(this, \"treemap\"),\n      downloadJSONMenuItem(this, \"treemap\", this._data),\n      downloadCSVMenuItem(this, \"treemap\", this._data),\n      downloadTSVMenuItem(this, \"treemap\", this._data),\n    ];\n  }\n\n  async render() {\n    const css = (key) => getComputedStyle(this.element).getPropertyValue(key);\n\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const width = this.params[\"width\"];\n    const height = this.params[\"height\"];\n    const logScale = this.params[\"log-scale\"];\n    const borderWidth = this.params[\"gap-width\"];\n\n    const colorScale = [];\n\n    // in metadata.json there is 6 colors for color scheme\n    for (let i = 0; i < 6; i++) {\n      colorScale.push(css(`--togostanza-series-${i}-color`));\n    }\n\n    const data = await loadData(\n      this.params[\"data-url\"],\n      this.params[\"data-type\"],\n      this.root.querySelector(\"main\")\n    );\n    this._data = data;\n\n    this.renderTemplate({ template: \"stanza.html.hbs\" });\n\n    // filter out all elements with n=0\n    const filteredData = data.filter(\n      (item) => (item.children && !item.n) || (item.n && item.n > 0)\n    );\n\n    //Add root element if there are more than one elements without parent. D3 cannot process data with more than one root elements\n    const rootElems = filteredData\n      .map((d, i) => ({\n        d,\n        i,\n      }))\n      .filter((d) => !d.d.parent)\n      .map((d) => d.i);\n\n    if (rootElems.length > 1) {\n      filteredData.push({ id: -1, value: \"\", label: \"\" });\n\n      rootElems.forEach((index) => {\n        filteredData[index].parent = -1;\n      });\n    }\n\n    if (!filteredData.find((d) => d.id === -1)) {\n      filteredData.push({ id: -1, value: \"\", label: \"\" });\n    }\n\n    const treeMapElement = this.root.querySelector(\"#treemap\");\n\n    const opts = {\n      width,\n      height,\n      colorScale,\n      logScale,\n      borderWidth,\n    };\n\n    draw(treeMapElement, filteredData, opts);\n  }\n}\n\nfunction transformValue(logScale, value) {\n  if (!value || value <= 0) {\n    return null;\n  }\n\n  if (logScale) {\n    return Math.log10(value);\n  }\n  return value;\n}\n\nfunction draw(el, dataset, opts) {\n  const { width, height, logScale, colorScale, borderWidth } = opts;\n\n  const nested = d3\n    .stratify()\n    .id(function (d) {\n      return d.id;\n    })\n    .parentId(function (d) {\n      return d.parent;\n    })(dataset);\n\n  // Height of upper \"root\" element tile\n  const rootHeight = getLineHeight(el) * 1.3;\n\n  // Height of the rest chart\n  let adjustedHeight = height - rootHeight;\n\n  if (adjustedHeight < 0) {\n    adjustedHeight = 10;\n  }\n\n  const x = d3.scaleLinear().rangeRound([0, width]);\n  const y = d3.scaleLinear().rangeRound([0, adjustedHeight]);\n\n  // make path-like string for node\n  const name = (d) => {\n    if (d.data.data.id === -1) {\n      return \"/\";\n    }\n    return d\n      .ancestors()\n      .reverse()\n      .map((d) => {\n        return d.data.data.label;\n      })\n      .join(\"/\");\n  };\n\n  const format = d3.format(\",d\");\n\n  const color = d3.scaleOrdinal(colorScale);\n\n  //move and scale children nodes to fit into parent nodes\n  function tile(node, x0, y0, x1, y1) {\n    treemapBinaryLog(node, 0, 0, width, adjustedHeight);\n    for (const child of node.children) {\n      child.x0 = x0 + (child.x0 / width) * (x1 - x0);\n      child.x1 = x0 + (child.x1 / width) * (x1 - x0);\n      child.y0 = y0 + (child.y0 / adjustedHeight) * (y1 - y0);\n      child.y1 = y0 + (child.y1 / adjustedHeight) * (y1 - y0);\n    }\n  }\n\n  const treemap = (data) =>\n    d3.treemap().tile(tile)(\n      d3\n        .hierarchy(data)\n        .sum((d) => d.data.n)\n        .sort((a, b) => b.value - a.value)\n        .each((d) => {\n          d.value2 = transformValue(logScale, d.value);\n        })\n    );\n\n  const svg = d3\n    .select(el)\n    .append(\"div\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .style(\"overflow\", \"hidden\")\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height]);\n\n  let group = svg.append(\"g\").call(render, treemap(nested), null);\n\n  function render(group, root, zoomInOut) {\n    group\n      .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", `${width}px`)\n      .attr(\"height\", `${height}px`)\n      .attr(\"style\", \"fill: var(--togostanza-background-color)\");\n\n    const node = group\n      .selectAll(\"g\")\n      .data(root.children.concat(root))\n      .join(\"g\");\n\n    node\n      .filter((d) => {\n        return d === root ? d.parent : d.children;\n      })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"click\", (event, d) => (d === root ? zoomout(root) : zoomin(d)));\n\n    node\n      .append(\"title\")\n      .text((d) =>\n        d === root\n          ? \"\"\n          : `${name(d)}\\n${\n              d?.children\n                ? format(d3.sum(d, (d) => d?.data?.data?.n || 0))\n                : d.data.data.n\n            }`\n      );\n\n    node\n      .append(\"rect\")\n      .attr(\"id\", (d) => (d.leafUid = uid(\"leaf\")).id)\n\n      .attr(\"style\", (d) => {\n        return `fill: ${\n          d === root\n            ? \"var(--togostanza-background-color)\"\n            : color(d.data.data.label)\n        }`;\n      });\n\n    //Add inner nodes to show that it's a zoomable tile\n    const innerNode = node\n      .filter((d) => {\n        return d !== root && d.children;\n      })\n      .selectAll(\"g\")\n      .data((d) => d.children)\n      .join(\"g\");\n\n    innerNode\n      .append(\"rect\")\n      .attr(\"id\", (d) => (d.leafUid = uid(\"leaf\")).id)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", (d) => shadeColor(color(d.parent.data.data.label), -15));\n\n    innerNode\n      .append(\"clipPath\")\n      .attr(\"id\", (d) => (d.clipUid = uid(\"clip\")).id)\n      .append(\"use\")\n      .attr(\"href\", (d) => d.leafUid.href);\n\n    //add clip paths to nodes to trim text\n    node\n      .append(\"clipPath\")\n      .attr(\"id\", (d) => (d.clipUid = uid(\"clip\")).id)\n      .append(\"use\")\n      .attr(\"href\", (d) => d.leafUid.href);\n\n    //add text contents\n    node\n      .append(\"text\")\n      .attr(\"clip-path\", (d) => d.clipUid)\n      .attr(\"y\", \"1.5em\")\n      .attr(\"x\", \"1em\")\n      .text((d) => {\n        if (d === root) {\n          return name(d);\n        } else {\n          return `${d.data.data.label}`;\n        }\n      });\n\n    //adjust rectangles positions\n    group.call(position, root, true, zoomInOut);\n  }\n\n  //function to wrap long text in svg\n  function wrap(root, isFirstRender, zoomInOut, d, i, nodes) {\n    // on positioning elements that are about to display\n\n    if (isFirstRender) {\n      let lineSeparator;\n\n      //nodes[i] is rect\n      const text = d3.select(nodes[i].parentNode).select(\"text\");\n\n      if (text.empty()) {\n        return;\n      }\n\n      const isRoot = d === root;\n\n      let maxWidth;\n      if (isRoot) {\n        lineSeparator = /(?=[/])/g;\n        maxWidth = width;\n      } else {\n        lineSeparator = /\\s+/;\n        maxWidth = width / 6;\n      }\n\n      const words = text.text().split(lineSeparator).reverse();\n\n      let word,\n        line = [],\n        lineNumber = 0;\n      const lineHeight = 1.15, // rems\n        x = text.attr(\"x\") || 0,\n        y = text.attr(\"y\") || 0,\n        dy = 0;\n\n      let tspan = text\n        .text(null)\n        .append(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y)\n        .attr(\"dy\", dy + \"em\");\n\n      while ((word = words.pop())) {\n        line.push(word);\n\n        tspan.text(line.join(isRoot ? \"\" : \" \"));\n        if (tspan.node().getComputedTextLength() > maxWidth - 5) {\n          if (isRoot) {\n            line.shift();\n            line[0] = `..${line[0]}`;\n            tspan.text(line.join(\"\"));\n          } else {\n            if (line.length < 2) {\n              continue;\n            }\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n\n            //set tspan to last added tspan and append word that didnt fit\n            tspan = text\n              .append(\"tspan\")\n              .attr(\"x\", \"1em\")\n              .attr(\"y\", y)\n              .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n              .text(word);\n          }\n        }\n      }\n\n      text\n        .append(\"tspan\")\n        .attr(\"class\", \"number-label\")\n        .attr(\"dy\", \"1.6em\")\n        .attr(\"x\", \"1.6em\")\n        .text((d) => format(d3.sum(d, (d) => d?.data?.data?.n || 0)));\n    }\n  }\n\n  //place elements according to data\n  function position(group, root, isFirstRender, zoomInOut) {\n    const a = group.selectAll(\"g\").attr(\"transform\", (d) => {\n      if (d === root) {\n        return `translate(0,0)`;\n      } else if (d.parent !== root) {\n        return `translate(${x(d.x0) - x(d.parent.x0)},${\n          y(d.y0) - y(d.parent.y0)\n        })`;\n      } else {\n        return `translate(${x(d.x0) + borderWidth},${\n          y(d.y0) + rootHeight + borderWidth\n        })`;\n      }\n    });\n\n    a.select(\"rect\")\n      .attr(\"width\", (d) => {\n        if (d === root) {\n          return width;\n        } else if (x(d.x1) === width) {\n          if (x(d.x1) - x(d.x0) - 2 * borderWidth < 0) {\n            return 0;\n          }\n          return x(d.x1) - x(d.x0) - 2 * borderWidth;\n        } else {\n          if (x(d.x1) - x(d.x0) - borderWidth < 0) {\n            return 0;\n          }\n          return x(d.x1) - x(d.x0) - borderWidth;\n        }\n      })\n      .attr(\"height\", (d) => {\n        if (d === root) {\n          return rootHeight;\n        } else if (y(d.y1) === adjustedHeight) {\n          if (y(d.y1) - y(d.y0) - 2 * borderWidth < 0) {\n            return 0;\n          }\n          return y(d.y1) - y(d.y0) - 2 * borderWidth;\n        } else {\n          if (y(d.y1) - y(d.y0) - borderWidth < 0) {\n            return 0;\n          }\n          return y(d.y1) - y(d.y0) - borderWidth;\n        }\n      })\n      .each(wrap.bind(this, root, isFirstRender, zoomInOut));\n  }\n\n  // When zooming in, draw the new nodes on top, and fade them in.\n  function zoomin(d) {\n    const group0 = group.attr(\"pointer-events\", \"none\");\n    const group1 = (group = svg.append(\"g\").call(render, d, \"zoomin\"));\n\n    //re-define domain for scaling\n\n    x.domain([d.x0, d.x1]);\n    y.domain([d.y0, d.y1]);\n\n    svg\n      .transition()\n      .duration(750)\n      .call((t) => {\n        return group0.transition(t).remove().call(position, d.parent, false);\n      })\n\n      .call((t) =>\n        group1\n          .transition(t)\n          .attrTween(\"opacity\", () => d3.interpolate(0, 1))\n          .call(position, d, false)\n      );\n  }\n\n  // When zooming out, draw the old nodes on top, and fade them out.\n  function zoomout(d) {\n    const group0 = group.attr(\"pointer-events\", \"none\");\n    const group1 = (group = svg\n      .insert(\"g\", \"*\")\n      .call(render, d.parent, \"zoomout\"));\n\n    x.domain([d.parent.x0, d.parent.x1]);\n    y.domain([d.parent.y0, d.parent.y1]);\n\n    svg\n      .transition()\n      .duration(750)\n      .call((t) =>\n        group0\n          .transition(t)\n          .remove()\n          .attrTween(\"opacity\", () => d3.interpolate(1, 0))\n          .call(position, d, false)\n      )\n      .call((t) => group1.transition(t).call(position, d.parent, false));\n  }\n}\n\n// Get text line height\nfunction getLineHeight(el) {\n  var temp = document.createElement(el.nodeName),\n    ret;\n  temp.setAttribute(\n    \"style\",\n    \"margin:0; padding:0; \" +\n      \"font-family:\" +\n      (el.style.fontFamily || \"inherit\") +\n      \"; \" +\n      \"font-size:\" +\n      (el.style.fontSize || \"inherit\")\n  );\n  temp.innerHTML = \"A\";\n\n  el.parentNode.appendChild(temp);\n  ret = temp.clientHeight;\n  temp.parentNode.removeChild(temp);\n\n  return ret;\n}\n"],"names":["d3\n    .stratify","d3.scaleLinear","format","d3.format","d3.scaleOrdinal","treemap","d3.treemap","d3\n        .hierarchy","d3\n    .select","d3.sum","d3.select","d3.interpolate"],"mappings":";;;;;;;;;;;;;;AAAA,IAAI,KAAK,GAAG,CAAC,CAAC;AACd;AACe,YAAQ,EAAE,IAAI,EAAE;AAC/B,EAAE,OAAO,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACpE,CAAC;AACD;AACA,SAAS,EAAE,CAAC,EAAE,EAAE;AAChB,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACf,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC;AAC/C,CAAC;AACD;AACA,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;AACpC,EAAE,OAAO,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAClC,CAAC;;ACbD;AACA;AACe,mBAAQ,EAAE,KAAK,EAAE,OAAO,EAAE;AACzC,EAAE,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;AACpC,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrD,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrD,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrD;AACA,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;AAC5C,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;AAC5C,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;AAC5C;AACA,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACxB,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACxB,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACxB;AACA,EAAE,MAAM,EAAE;AACV,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxE,EAAE,MAAM,EAAE;AACV,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxE,EAAE,MAAM,EAAE;AACV,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxE;AACA,EAAE,OAAO,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC5B;;ACxBA;AACe,yBAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACjD,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ;AAC/B,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM;AACpB,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;AACb;AACA,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAC1C,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACzC,GAAG;AACH;AACA,EAAE,IAAI,OAAO,GAAG,CAAC,CAAC;AAClB,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;AACf;AACA,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,EAAE;AACpB,IAAI,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;AACjC,GAAG;AACH,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACX;AACA,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3C;AACA,EAAE,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAClD,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACpB,MAAM,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC;AAC/B,MAAM,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,WAAW,CAAC;AAC5C;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACjB,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB;AACA,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE;AACnB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACjC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,EAAE;AACnC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACpB,OAAO,MAAM;AACb,QAAQ,EAAE,GAAG,GAAG,CAAC;AACjB,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,WAAW,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACxE,MAAM,EAAE,CAAC,CAAC;AACV,KAAK;AACL;AACA,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,WAAW;AAC3C,MAAM,UAAU,GAAG,KAAK,GAAG,SAAS,CAAC;AACrC;AACA,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;AAC3B,MAAM,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE,GAAG,SAAS,IAAI,KAAK,GAAG,EAAE,CAAC;AACzE,MAAM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,MAAM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAClD,KAAK,MAAM;AACX,MAAM,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE,GAAG,SAAS,IAAI,KAAK,GAAG,EAAE,CAAC;AACzE,MAAM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,MAAM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAClD,KAAK;AACL,GAAG;AACH;;AC9Ce,MAAM,aAAa,SAAS,MAAM,CAAC;AAClD,EAAE,IAAI,GAAG;AACT,IAAI,OAAO;AACX,MAAM,mBAAmB,CAAC,IAAI,EAAE,SAAS,CAAC;AAC1C,MAAM,mBAAmB,CAAC,IAAI,EAAE,SAAS,CAAC;AAC1C,MAAM,oBAAoB,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;AACvD,MAAM,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;AACtD,MAAM,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;AACtD,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,MAAM,MAAM,GAAG;AACjB,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAC9E;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACzD;AACA,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACvC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACzC,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC9C,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACjD;AACA,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC;AAC1B;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,MAAM,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,oBAAoB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7D,KAAK;AACL;AACA,IAAI,MAAM,IAAI,GAAG,MAAM,QAAQ;AAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7B,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AAC9B,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;AACrC,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB;AACA,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,CAAC;AACzD;AACA;AACA,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM;AACpC,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpE,KAAK,CAAC;AACN;AACA;AACA,IAAI,MAAM,SAAS,GAAG,YAAY;AAClC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AACtB,QAAQ,CAAC;AACT,QAAQ,CAAC;AACT,OAAO,CAAC,CAAC;AACT,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACjC,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,IAAI,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9B,MAAM,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;AAC1D;AACA,MAAM,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AACnC,QAAQ,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACxC,OAAO,CAAC,CAAC;AACT,KAAK;AACL;AACA,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;AAChD,MAAM,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;AAC1D,KAAK;AACL;AACA,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAC/D;AACA,IAAI,MAAM,IAAI,GAAG;AACjB,MAAM,KAAK;AACX,MAAM,MAAM;AACZ,MAAM,UAAU;AAChB,MAAM,QAAQ;AACd,MAAM,WAAW;AACjB,KAAK,CAAC;AACN;AACA,IAAI,IAAI,CAAC,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;AAC7C,GAAG;AACH,CAAC;AACD;AACA,SAAS,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE;AACzC,EAAE,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,EAAE;AAC5B,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA,EAAE,IAAI,QAAQ,EAAE;AAChB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7B,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACD;AACA,SAAS,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;AACjC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;AACpE;AACA,EAAE,MAAM,MAAM,GAAGA,QACJ,EAAE;AACf,KAAK,EAAE,CAAC,UAAU,CAAC,EAAE;AACrB,MAAM,OAAO,CAAC,CAAC,EAAE,CAAC;AAClB,KAAK,CAAC;AACN,KAAK,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC3B,MAAM,OAAO,CAAC,CAAC,MAAM,CAAC;AACtB,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;AAChB;AACA;AACA,EAAE,MAAM,UAAU,GAAG,aAAa,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AAC7C;AACA;AACA,EAAE,IAAI,cAAc,GAAG,MAAM,GAAG,UAAU,CAAC;AAC3C;AACA,EAAE,IAAI,cAAc,GAAG,CAAC,EAAE;AAC1B,IAAI,cAAc,GAAG,EAAE,CAAC;AACxB,GAAG;AACH;AACA,EAAE,MAAM,CAAC,GAAGC,MAAc,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,EAAE,MAAM,CAAC,GAAGA,MAAc,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;AAC7D;AACA;AACA,EAAE,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK;AACtB,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE;AAC/B,MAAM,OAAO,GAAG,CAAC;AACjB,KAAK;AACL,IAAI,OAAO,CAAC;AACZ,OAAO,SAAS,EAAE;AAClB,OAAO,OAAO,EAAE;AAChB,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK;AAClB,QAAQ,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACjC,OAAO,CAAC;AACR,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,GAAG,CAAC;AACJ;AACA,EAAE,MAAMC,QAAM,GAAGC,MAAS,CAAC,IAAI,CAAC,CAAC;AACjC;AACA,EAAE,MAAM,KAAK,GAAGC,OAAe,CAAC,UAAU,CAAC,CAAC;AAC5C;AACA;AACA,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACtC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;AACxD,IAAI,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvC,MAAM,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AACrD,MAAM,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AACrD,MAAM,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,cAAc,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9D,MAAM,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,cAAc,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9D,KAAK;AACL,GAAG;AACH;AACA,EAAE,MAAMC,SAAO,GAAG,CAAC,IAAI;AACvB,IAAIC,OAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,MAAMC,SACY,CAAC,IAAI,CAAC;AACxB,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7B,SAAS,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AAC1C,SAAS,IAAI,CAAC,CAAC,CAAC,KAAK;AACrB,UAAU,CAAC,CAAC,MAAM,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AACvD,SAAS,CAAC;AACV,KAAK,CAAC;AACN;AACA,EAAE,MAAM,GAAG,GAAGC,MACH,CAAC,EAAE,CAAC;AACf,KAAK,MAAM,CAAC,KAAK,CAAC;AAClB,KAAK,KAAK,CAAC,OAAO,EAAE,KAAK,GAAG,IAAI,CAAC;AACjC,KAAK,KAAK,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAC;AACnC,KAAK,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC;AAChC,KAAK,MAAM,CAAC,KAAK,CAAC;AAClB,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAEH,SAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;AAClE;AACA,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE;AAC1C,IAAI,KAAK;AACT,OAAO,MAAM,CAAC,MAAM,CAAC;AACrB,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACnB,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACnB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAClC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;AACpC,OAAO,IAAI,CAAC,OAAO,EAAE,0CAA0C,CAAC,CAAC;AACjE;AACA,IAAI,MAAM,IAAI,GAAG,KAAK;AACtB,OAAO,SAAS,CAAC,GAAG,CAAC;AACrB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB;AACA,IAAI,IAAI;AACR,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK;AACrB,QAAQ,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC;AAClD,OAAO,CAAC;AACR,OAAO,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;AAChC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E;AACA,IAAI,IAAI;AACR,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,OAAO,IAAI,CAAC,CAAC,CAAC;AACd,QAAQ,CAAC,KAAK,IAAI;AAClB,YAAY,EAAE;AACd,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACzB,cAAc,CAAC,EAAE,QAAQ;AACzB,kBAAkBH,QAAM,CAACO,GAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACjE,kBAAkB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,aAAa,CAAC;AACd,OAAO,CAAC;AACR;AACA,IAAI,IAAI;AACR,OAAO,MAAM,CAAC,MAAM,CAAC;AACrB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;AACtD;AACA,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK;AAC5B,QAAQ,OAAO,CAAC,MAAM;AACtB,UAAU,CAAC,KAAK,IAAI;AACpB,cAAc,oCAAoC;AAClD,cAAc,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT;AACA;AACA,IAAI,MAAM,SAAS,GAAG,IAAI;AAC1B,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK;AACrB,QAAQ,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC;AACxC,OAAO,CAAC;AACR,OAAO,SAAS,CAAC,GAAG,CAAC;AACrB,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;AAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB;AACA,IAAI,SAAS;AACb,OAAO,MAAM,CAAC,MAAM,CAAC;AACrB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;AACtD,OAAO,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;AAC3B,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;AAC9B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E;AACA,IAAI,SAAS;AACb,OAAO,MAAM,CAAC,UAAU,CAAC;AACzB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;AACtD,OAAO,MAAM,CAAC,KAAK,CAAC;AACpB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA;AACA,IAAI,IAAI;AACR,OAAO,MAAM,CAAC,UAAU,CAAC;AACzB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;AACtD,OAAO,MAAM,CAAC,KAAK,CAAC;AACpB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA;AACA,IAAI,IAAI;AACR,OAAO,MAAM,CAAC,MAAM,CAAC;AACrB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;AAC1C,OAAO,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC;AACzB,OAAO,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;AACvB,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK;AACnB,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE;AACxB,UAAU,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB,SAAS,MAAM;AACf,UAAU,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,SAAS;AACT,OAAO,CAAC,CAAC;AACT;AACA;AACA,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAChD,GAAG;AACH;AACA;AACA,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;AAC7D;AACA;AACA,IAAI,IAAI,aAAa,EAAE;AACvB,MAAM,IAAI,aAAa,CAAC;AACxB;AACA;AACA,MAAM,MAAM,IAAI,GAAGC,MAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjE;AACA,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;AACxB,QAAQ,OAAO;AACf,OAAO;AACP;AACA,MAAM,MAAM,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC;AAChC;AACA,MAAM,IAAI,QAAQ,CAAC;AACnB,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,aAAa,GAAG,UAAU,CAAC;AACnC,QAAQ,QAAQ,GAAG,KAAK,CAAC;AACzB,OAAO,MAAM;AACb,QAAQ,aAAa,GAAG,KAAK,CAAC;AAC9B,QAAQ,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;AAC/D;AACA,MAAM,IAAI,IAAI;AACd,QAAQ,IAAI,GAAG,EAAE;AACjB,QAAQ,UAAU,GAAG,CAAC,CAAC;AACvB,MAAM,MAAM,UAAU,GAAG,IAAI;AAC7B,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,QAAQ,EAAE,GAAG,CAAC,CAAC;AACf;AACA,MAAM,IAAI,KAAK,GAAG,IAAI;AACtB,SAAS,IAAI,CAAC,IAAI,CAAC;AACnB,SAAS,MAAM,CAAC,OAAO,CAAC;AACxB,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACrB,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACrB,SAAS,IAAI,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;AAC/B;AACA,MAAM,QAAQ,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG;AACnC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACjD,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,EAAE,GAAG,QAAQ,GAAG,CAAC,EAAE;AACjE,UAAU,IAAI,MAAM,EAAE;AACtB,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;AACzB,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,WAAW,MAAM;AACjB,YAAY,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,cAAc,SAAS;AACvB,aAAa;AACb,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;AACvB,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1B;AACA;AACA,YAAY,KAAK,GAAG,IAAI;AACxB,eAAe,MAAM,CAAC,OAAO,CAAC;AAC9B,eAAe,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;AAC/B,eAAe,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAC3B,eAAe,IAAI,CAAC,IAAI,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC;AAChE,eAAe,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI;AACV,SAAS,MAAM,CAAC,OAAO,CAAC;AACxB,SAAS,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC;AACtC,SAAS,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AAC5B,SAAS,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC;AAC3B,SAAS,IAAI,CAAC,CAAC,CAAC,KAAKR,QAAM,CAACO,GAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE;AAC3D,IAAI,MAAM,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK;AAC5D,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;AACtB,QAAQ,OAAO,CAAC,cAAc,CAAC,CAAC;AAChC,OAAO,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,EAAE;AACpC,QAAQ,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACtD,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;AAClC,SAAS,CAAC,CAAC,CAAC;AACZ,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;AACnD,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,WAAW;AAC5C,SAAS,CAAC,CAAC,CAAC;AACZ,OAAO;AACP,KAAK,CAAC,CAAC;AACP;AACA,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;AACpB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK;AAC5B,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE;AACxB,UAAU,OAAO,KAAK,CAAC;AACvB,SAAS,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,EAAE;AACtC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE;AACvD,YAAY,OAAO,CAAC,CAAC;AACrB,WAAW;AACX,UAAU,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;AACrD,SAAS,MAAM;AACf,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE;AACnD,YAAY,OAAO,CAAC,CAAC;AACrB,WAAW;AACX,UAAU,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;AACjD,SAAS;AACT,OAAO,CAAC;AACR,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK;AAC7B,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE;AACxB,UAAU,OAAO,UAAU,CAAC;AAC5B,SAAS,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,cAAc,EAAE;AAC/C,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE;AACvD,YAAY,OAAO,CAAC,CAAC;AACrB,WAAW;AACX,UAAU,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;AACrD,SAAS,MAAM;AACf,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE;AACnD,YAAY,OAAO,CAAC,CAAC;AACrB,WAAW;AACX,UAAU,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;AACjD,SAAS;AACT,OAAO,CAAC;AACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;AAC7D,GAAG;AACH;AACA;AACA,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE;AACrB,IAAI,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;AACxD,IAAI,MAAM,MAAM,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AACvE;AACA;AACA;AACA,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B;AACA,IAAI,GAAG;AACP,OAAO,UAAU,EAAE;AACnB,OAAO,QAAQ,CAAC,GAAG,CAAC;AACpB,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK;AACnB,QAAQ,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7E,OAAO,CAAC;AACR;AACA,OAAO,IAAI,CAAC,CAAC,CAAC;AACd,QAAQ,MAAM;AACd,WAAW,UAAU,CAAC,CAAC,CAAC;AACxB,WAAW,SAAS,CAAC,SAAS,EAAE,MAAME,aAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,WAAW,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC;AACnC,OAAO,CAAC;AACR,GAAG;AACH;AACA;AACA,EAAE,SAAS,OAAO,CAAC,CAAC,EAAE;AACtB,IAAI,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;AACxD,IAAI,MAAM,MAAM,IAAI,KAAK,GAAG,GAAG;AAC/B,OAAO,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;AACvB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAC1C;AACA,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC;AACA,IAAI,GAAG;AACP,OAAO,UAAU,EAAE;AACnB,OAAO,QAAQ,CAAC,GAAG,CAAC;AACpB,OAAO,IAAI,CAAC,CAAC,CAAC;AACd,QAAQ,MAAM;AACd,WAAW,UAAU,CAAC,CAAC,CAAC;AACxB,WAAW,MAAM,EAAE;AACnB,WAAW,SAAS,CAAC,SAAS,EAAE,MAAMA,aAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,WAAW,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC;AACnC,OAAO;AACP,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AACzE,GAAG;AACH,CAAC;AACD;AACA;AACA,SAAS,aAAa,CAAC,EAAE,EAAE;AAC3B,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC;AAChD,IAAI,GAAG,CAAC;AACR,EAAE,IAAI,CAAC,YAAY;AACnB,IAAI,OAAO;AACX,IAAI,uBAAuB;AAC3B,MAAM,cAAc;AACpB,OAAO,EAAE,CAAC,KAAK,CAAC,UAAU,IAAI,SAAS,CAAC;AACxC,MAAM,IAAI;AACV,MAAM,YAAY;AAClB,OAAO,EAAE,CAAC,KAAK,CAAC,QAAQ,IAAI,SAAS,CAAC;AACtC,GAAG,CAAC;AACJ,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACvB;AACA,EAAE,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAClC,EAAE,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;AAC1B,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACpC;AACA,EAAE,OAAO,GAAG,CAAC;AACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}