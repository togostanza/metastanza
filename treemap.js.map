{"version":3,"file":"treemap.js","sources":["../../../home/runner/work/metastanza/metastanza/node_modules/d3-array/src/ascending.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-array/src/bisector.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-array/src/number.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-array/src/bisect.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-array/src/ticks.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-interpolate/src/round.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-format/src/precisionFixed.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-format/src/precisionPrefix.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-format/src/precisionRound.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-hierarchy/src/constant.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-hierarchy/src/treemap/slice.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-hierarchy/src/treemap/squarify.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-hierarchy/src/treemap/index.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-scale/src/constant.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-scale/src/number.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-scale/src/continuous.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-scale/src/tickFormat.js","../../../home/runner/work/metastanza/metastanza/node_modules/d3-scale/src/linear.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/uid.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/shadeColor.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/treemapBinaryLog.js","../../../home/runner/work/metastanza/metastanza/stanzas/treemap/index.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function bisector(f) {\n  let delta = f;\n  let compare1 = f;\n  let compare2 = f;\n\n  if (f.length !== 2) {\n    delta = (d, x) => f(d) - x;\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","var count = 0;\n\nexport default function (name) {\n  return new Id(\"O-\" + (name === null ? \"\" : name + \"-\") + ++count);\n}\n\nfunction Id(id) {\n  this.id = id;\n  this.href = new URL(`#${id}`, location) + \"\";\n}\n\nId.prototype.toString = function () {\n  return \"url(\" + this.href + \")\";\n};\n","//color darkening/lightening function\n\nexport default function (color, percent) {\n  const trimmedColor = color.trim();\n  let R = parseInt(trimmedColor.substring(1, 3), 16);\n  let G = parseInt(trimmedColor.substring(3, 5), 16);\n  let B = parseInt(trimmedColor.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  const RR =\n    R.toString(16).length === 1 ? \"0\" + R.toString(16) : R.toString(16);\n  const GG =\n    G.toString(16).length === 1 ? \"0\" + G.toString(16) : G.toString(16);\n  const BB =\n    B.toString(16).length === 1 ? \"0\" + B.toString(16) : B.toString(16);\n\n  return \"#\" + RR + GG + BB;\n}\n","//tiling function with log scale support\nexport default function (parent, x0, y0, x1, y1) {\n  const nodes = parent.children,\n    n = nodes.length,\n    sums = new Array(n + 1);\n\n  let i, sum;\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value2;\n  }\n\n  let nodeSum = 0;\n  let kkk = -1;\n\n  while (++kkk < n) {\n    nodeSum += nodes[kkk].value2;\n  }\n  kkk = -1;\n\n  partition(0, n, nodeSum, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      const node = nodes[i];\n      (node.x0 = x0), (node.y0 = y0);\n      (node.x1 = x1), (node.y1 = y1);\n      return;\n    }\n\n    const valueOffset = sums[i],\n      valueTarget = value / 2 + valueOffset;\n\n    let k = i + 1,\n      hi = j - 1;\n\n    while (k < hi) {\n      const mid = (k + hi) >>> 1;\n      if (sums[mid] < valueTarget) {\n        k = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n\n    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) {\n      --k;\n    }\n\n    const valueLeft = sums[k] - valueOffset,\n      valueRight = value - valueLeft;\n\n    if (x1 - x0 > y1 - y0) {\n      const xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      const yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import Stanza from \"togostanza/stanza\";\nimport * as d3 from \"d3\";\nimport uid from \"./uid\";\nimport loadData from \"togostanza-utils/load-data\"; //\"@/lib/load-data\";\n\nimport {\n  downloadSvgMenuItem,\n  downloadPngMenuItem,\n  downloadJSONMenuItem,\n  downloadCSVMenuItem,\n  downloadTSVMenuItem,\n  copyHTMLSnippetToClipboardMenuItem,\n  appendCustomCss,\n} from \"togostanza-utils\"; // from \"@/lib/metastanza_utils.js\"; //\nimport shadeColor from \"./shadeColor\";\nimport treemapBinaryLog from \"./treemapBinaryLog\";\n\nexport default class TreeMapStanza extends Stanza {\n  menu() {\n    return [\n      downloadSvgMenuItem(this, \"treemap\"),\n      downloadPngMenuItem(this, \"treemap\"),\n      downloadJSONMenuItem(this, \"treemap\", this._data),\n      downloadCSVMenuItem(this, \"treemap\", this._data),\n      downloadTSVMenuItem(this, \"treemap\", this._data),\n      copyHTMLSnippetToClipboardMenuItem(this),\n    ];\n  }\n\n  async render() {\n    const css = (key) => getComputedStyle(this.element).getPropertyValue(key);\n\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const width = this.params[\"width\"];\n    const height = this.params[\"height\"];\n    const logScale = this.params[\"log-scale\"];\n    const borderWidth = this.params[\"gap-width\"];\n\n    const colorScale = [];\n\n    // in metadata.json there is 6 colors for color scheme\n    for (let i = 0; i < 6; i++) {\n      colorScale.push(css(`--togostanza-series-${i}-color`));\n    }\n\n    const data = await loadData(\n      this.params[\"data-url\"],\n      this.params[\"data-type\"],\n      this.root.querySelector(\"main\")\n    );\n    this._data = data;\n\n    this.renderTemplate({ template: \"stanza.html.hbs\" });\n\n    // filter out all elements with n=0\n    const filteredData = data.filter(\n      (item) => (item.children && !item.n) || (item.n && item.n > 0)\n    );\n\n    //Add root element if there are more than one elements without parent. D3 cannot process data with more than one root elements\n    const rootElemIndexes = [];\n    for (let i = 0; i < filteredData.length - 1; i++) {\n      if (!filteredData[i]?.parent) {\n        rootElemIndexes.push(i);\n      }\n    }\n    if (rootElemIndexes.length > 1) {\n      filteredData.push({ id: -1, value: \"\", label: \"\" });\n\n      rootElemIndexes.forEach((index) => {\n        filteredData[index].parent = -1;\n      });\n    }\n\n    const treeMapElement = this.root.querySelector(\"#treemap\");\n\n    const opts = {\n      width,\n      height,\n      colorScale,\n      logScale,\n      borderWidth,\n    };\n\n    draw(treeMapElement, filteredData, opts);\n  }\n}\n\nfunction transformValue(logScale, value) {\n  if (!value || value <= 0) {\n    return null;\n  }\n\n  if (logScale) {\n    return Math.log10(value);\n  }\n  return value;\n}\n\nfunction draw(el, dataset, opts) {\n  const { width, height, logScale, colorScale, borderWidth } = opts;\n\n  const nested = d3\n    .stratify()\n    .id(function (d) {\n      return d.id;\n    })\n    .parentId(function (d) {\n      return d.parent;\n    })(dataset);\n\n  // Height of upper \"root\" element tile\n  const rootHeight = getLineHeight(el) * 1.3;\n\n  // Height of the rest chart\n  let adjustedHeight = height - rootHeight;\n\n  if (adjustedHeight < 0) {\n    adjustedHeight = 10;\n  }\n\n  const x = d3.scaleLinear().rangeRound([0, width]);\n  const y = d3.scaleLinear().rangeRound([0, adjustedHeight]);\n\n  // make path-like string for node\n  const name = (d) => {\n    if (d.data.data.id === -1) {\n      return \"/\";\n    }\n    return d\n      .ancestors()\n      .reverse()\n      .map((d) => {\n        return d.data.data.label;\n      })\n      .join(\"/\");\n  };\n\n  const format = d3.format(\",d\");\n\n  const color = d3.scaleOrdinal(colorScale);\n\n  //move and scale children nodes to fit into parent nodes\n  function tile(node, x0, y0, x1, y1) {\n    treemapBinaryLog(node, 0, 0, width, adjustedHeight);\n    for (const child of node.children) {\n      child.x0 = x0 + (child.x0 / width) * (x1 - x0);\n      child.x1 = x0 + (child.x1 / width) * (x1 - x0);\n      child.y0 = y0 + (child.y0 / adjustedHeight) * (y1 - y0);\n      child.y1 = y0 + (child.y1 / adjustedHeight) * (y1 - y0);\n    }\n  }\n\n  const treemap = (data) =>\n    d3.treemap().tile(tile)(\n      d3\n        .hierarchy(data)\n        .sum((d) => d.data.n)\n        .sort((a, b) => b.value - a.value)\n        .each((d) => {\n          d.value2 = transformValue(logScale, d.value);\n        })\n    );\n\n  const svg = d3\n    .select(el)\n    .append(\"div\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .style(\"overflow\", \"hidden\")\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height]);\n\n  let group = svg.append(\"g\").call(render, treemap(nested), null);\n\n  function render(group, root, zoomInOut) {\n    group\n      .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", `${width}px`)\n      .attr(\"height\", `${height}px`)\n      .attr(\"style\", \"fill: var(--togostanza-background-color)\");\n\n    const node = group\n      .selectAll(\"g\")\n      .data(root.children.concat(root))\n      .join(\"g\");\n\n    node\n      .filter((d) => {\n        return d === root ? d.parent : d.children;\n      })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"click\", (event, d) => (d === root ? zoomout(root) : zoomin(d)));\n\n    node\n      .append(\"title\")\n      .text((d) =>\n        d === root\n          ? \"\"\n          : `${name(d)}\\n${\n              d?.children\n                ? format(d3.sum(d, (d) => d?.data?.data?.n || 0))\n                : d.data.data.n\n            }`\n      );\n\n    node\n      .append(\"rect\")\n      .attr(\"id\", (d) => (d.leafUid = uid(\"leaf\")).id)\n\n      .attr(\"style\", (d) => {\n        return `fill: ${\n          d === root\n            ? \"var(--togostanza-background-color)\"\n            : color(d.data.data.label)\n        }`;\n      });\n\n    //Add inner nodes to show that it's a zoomable tile\n    const innerNode = node\n      .filter((d) => {\n        return d !== root && d.children;\n      })\n      .selectAll(\"g\")\n      .data((d) => d.children)\n      .join(\"g\");\n\n    innerNode\n      .append(\"rect\")\n      .attr(\"id\", (d) => (d.leafUid = uid(\"leaf\")).id)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", (d) => shadeColor(color(d.parent.data.data.label), -15));\n\n    innerNode\n      .append(\"clipPath\")\n      .attr(\"id\", (d) => (d.clipUid = uid(\"clip\")).id)\n      .append(\"use\")\n      .attr(\"href\", (d) => d.leafUid.href);\n\n    //add clip paths to nodes to trim text\n    node\n      .append(\"clipPath\")\n      .attr(\"id\", (d) => (d.clipUid = uid(\"clip\")).id)\n      .append(\"use\")\n      .attr(\"href\", (d) => d.leafUid.href);\n\n    //add text contents\n    node\n      .append(\"text\")\n      .attr(\"clip-path\", (d) => d.clipUid)\n      .attr(\"y\", \"1.5em\")\n      .attr(\"x\", \"0.5rem\")\n      .text((d) => {\n        if (d === root) {\n          return name(d);\n        } else {\n          return `${d.data.data.label}`;\n        }\n      });\n\n    // append expand icon\n    // node\n    //   .filter((d) => d !== root && d.children)\n    //   .append(\"image\")\n    //   .attr(\"width\", 10)\n    //   .attr(\"height\", 10)\n    //   .attr(\"href\", expandSvg);\n\n    //adjust rectangles positions\n    group.call(position, root, true, zoomInOut);\n  }\n\n  //function to wrap long text in svg\n  function wrap(root, isFirstRender, zoomInOut, d, i, nodes) {\n    // on positioning elements that are about to display\n\n    if (isFirstRender) {\n      let lineSeparator;\n\n      //nodes[i] is rect\n      const text = d3.select(nodes[i].parentNode).select(\"text\");\n\n      if (text.empty()) {\n        return;\n      }\n\n      const isRoot = d === root;\n\n      let maxWidth;\n      if (isRoot) {\n        lineSeparator = /(?=[/])/g;\n        maxWidth = width;\n      } else {\n        lineSeparator = /\\s+/;\n        maxWidth = width / 6;\n      }\n\n      const words = text.text().split(lineSeparator).reverse();\n\n      let word,\n        line = [],\n        lineNumber = 0;\n      const lineHeight = 1.15, // rems\n        x = text.attr(\"x\") || 0,\n        y = text.attr(\"y\") || 0,\n        dy = 0;\n\n      let tspan = text\n        .text(null)\n        .append(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y)\n        .attr(\"dy\", dy + \"em\");\n\n      while ((word = words.pop())) {\n        line.push(word);\n\n        tspan.text(line.join(isRoot ? \"\" : \" \"));\n        if (tspan.node().getComputedTextLength() > maxWidth - 5) {\n          if (isRoot) {\n            line.shift();\n            line[0] = `..${line[0]}`;\n            tspan.text(line.join(\"\"));\n          } else {\n            if (line.length < 2) {\n              continue;\n            }\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n\n            //set tspan to last added tspan and append word that didnt fit\n            tspan = text\n              .append(\"tspan\")\n              .attr(\"x\", x)\n              .attr(\"y\", y)\n              .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n              .text(word);\n          }\n        }\n      }\n\n      text\n        .append(\"tspan\")\n        .attr(\"class\", \"number-label\")\n        .attr(\"dy\", \"1.6em\")\n        .attr(\"x\", \"0.5rem\")\n        .text((d) => format(d3.sum(d, (d) => d?.data?.data?.n || 0)));\n    }\n  }\n\n  //place elements according to data\n  function position(group, root, isFirstRender, zoomInOut) {\n    const a = group.selectAll(\"g\").attr(\"transform\", (d) => {\n      if (d === root) {\n        return `translate(0,0)`;\n      } else if (d.parent !== root) {\n        return `translate(${x(d.x0) - x(d.parent.x0)},${\n          y(d.y0) - y(d.parent.y0)\n        })`;\n      } else {\n        return `translate(${x(d.x0) + borderWidth},${\n          y(d.y0) + rootHeight + borderWidth\n        })`;\n      }\n    });\n\n    // Placing icons in the middle of nodes\n    // group\n    //   .selectAll(\"image\")\n    //   .attr(\"x\", (d) => {\n    //     if (x(d.x0) === width) {\n    //       return (\n    //         (x(d.x0) + x(d.x1)) / 2 - x(d.x0) - iconWidth / 2 - 2 * borderWidth\n    //       );\n    //     } else {\n    //       return (\n    //         (x(d.x0) + x(d.x1)) / 2 - x(d.x0) - iconWidth / 2 - borderWidth\n    //       );\n    //     }\n    //   })\n    //   .attr(\"y\", (d) => {\n    //     if (y(d.y0) === height) {\n    //       return (\n    //         (y(d.y0) + y(d.y1) - 2 * borderWidth) / 2 - y(d.y0) - iconHeight / 2\n    //       );\n    //     } else {\n    //       return (\n    //         (y(d.y0) + y(d.y1) - borderWidth) / 2 - y(d.y0) - iconHeight / 2\n    //       );\n    //     }\n    //   });\n\n    a.select(\"rect\")\n      .attr(\"width\", (d) => {\n        if (d === root) {\n          return width;\n        } else if (x(d.x1) === width) {\n          if (x(d.x1) - x(d.x0) - 2 * borderWidth < 0) {\n            return 0;\n          }\n          return x(d.x1) - x(d.x0) - 2 * borderWidth;\n        } else {\n          if (x(d.x1) - x(d.x0) - borderWidth < 0) {\n            return 0;\n          }\n          return x(d.x1) - x(d.x0) - borderWidth;\n        }\n      })\n      .attr(\"height\", (d) => {\n        if (d === root) {\n          return rootHeight;\n        } else if (y(d.y1) === adjustedHeight) {\n          if (y(d.y1) - y(d.y0) - 2 * borderWidth < 0) {\n            return 0;\n          }\n          return y(d.y1) - y(d.y0) - 2 * borderWidth;\n        } else {\n          if (y(d.y1) - y(d.y0) - borderWidth < 0) {\n            return 0;\n          }\n          return y(d.y1) - y(d.y0) - borderWidth;\n        }\n      })\n      .each(wrap.bind(this, root, isFirstRender, zoomInOut));\n  }\n\n  // When zooming in, draw the new nodes on top, and fade them in.\n  function zoomin(d) {\n    const group0 = group.attr(\"pointer-events\", \"none\");\n    const group1 = (group = svg.append(\"g\").call(render, d, \"zoomin\"));\n\n    //re-define domain for scaling\n\n    x.domain([d.x0, d.x1]);\n    y.domain([d.y0, d.y1]);\n\n    svg\n      .transition()\n      .duration(750)\n      .call((t) => {\n        return group0.transition(t).remove().call(position, d.parent, false);\n      })\n\n      .call((t) =>\n        group1\n          .transition(t)\n          .attrTween(\"opacity\", () => d3.interpolate(0, 1))\n          .call(position, d, false)\n      );\n  }\n\n  // When zooming out, draw the old nodes on top, and fade them out.\n  function zoomout(d) {\n    const group0 = group.attr(\"pointer-events\", \"none\");\n    const group1 = (group = svg\n      .insert(\"g\", \"*\")\n      .call(render, d.parent, \"zoomout\"));\n\n    x.domain([d.parent.x0, d.parent.x1]);\n    y.domain([d.parent.y0, d.parent.y1]);\n\n    svg\n      .transition()\n      .duration(750)\n      .call((t) =>\n        group0\n          .transition(t)\n          .remove()\n          .attrTween(\"opacity\", () => d3.interpolate(1, 0))\n          .call(position, d, false)\n      )\n      .call((t) => group1.transition(t).call(position, d.parent, false));\n  }\n}\n\n// Get text line height\nfunction getLineHeight(el) {\n  var temp = document.createElement(el.nodeName),\n    ret;\n  temp.setAttribute(\n    \"style\",\n    \"margin:0; padding:0; \" +\n      \"font-family:\" +\n      (el.style.fontFamily || \"inherit\") +\n      \"; \" +\n      \"font-size:\" +\n      (el.style.fontSize || \"inherit\")\n  );\n  temp.innerHTML = \"A\";\n\n  el.parentNode.appendChild(temp);\n  ret = temp.clientHeight;\n  temp.parentNode.removeChild(temp);\n\n  return ret;\n}\n"],"names":["number","constant","interpolate","interpolateValue","d3\n    .stratify","d3.scaleLinear","format","d3.format","d3.scaleOrdinal","d3.treemap","d3\n        .hierarchy","d3\n    .select","d3.sum","d3.select","d3.interpolate"],"mappings":"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"}