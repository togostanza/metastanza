{"version":3,"file":"population-pyramid.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/population-pyramid/index.js"],"sourcesContent":["import vegaEmbed from \"vega-embed\";\nimport Stanza from \"togostanza/stanza\";\n\nexport default class populationPyramid extends Stanza {\n  async render() {\n    //width,height,padding\n    const width = this.params[\"width\"],\n      height = this.params[\"height\"];\n\n    const signals = [\n      { name: \"chartWidth\", value: 300 },\n      { name: \"chartPad\", value: 20 },\n      { name: \"width\", update: \"2 * chartWidth + chartPad\" },\n      {\n        name: \"year\",\n        value: 2000,\n        bind: { input: \"range\", min: 1850, max: 2000, step: 10 },\n      },\n    ];\n\n    const data = [\n      {\n        name: \"population\",\n        url: \"https://vega.github.io/vega/data/population.json\",\n      },\n      {\n        name: \"popYear\",\n        source: \"population\",\n        transform: [{ type: \"filter\", expr: \"datum.year == year\" }],\n      },\n      {\n        name: \"males\",\n        source: \"popYear\",\n        transform: [{ type: \"filter\", expr: \"datum.sex == 1\" }],\n      },\n      {\n        name: \"females\",\n        source: \"popYear\",\n        transform: [{ type: \"filter\", expr: \"datum.sex == 2\" }],\n      },\n      {\n        name: \"ageGroups\",\n        source: \"population\",\n        transform: [{ type: \"aggregate\", groupby: [\"age\"] }],\n      },\n    ];\n\n    const scales = [\n      {\n        name: \"y\",\n        type: \"band\",\n        range: [{ signal: \"height\" }, 0],\n        round: true,\n        domain: { data: \"ageGroups\", field: \"age\" },\n      },\n      {\n        name: \"c\",\n        type: \"ordinal\",\n        domain: [1, 2],\n        range: [\n          \"var(--stogozana-group2-color)\",\n          \"var(--stogozana-group1-color)\",\n        ],\n      },\n    ];\n\n    const text = {\n      type: \"text\",\n      interactive: false,\n      from: { data: \"ageGroups\" },\n      encode: {\n        enter: {\n          x: { signal: \"chartWidth + chartPad / 2\" },\n          y: { scale: \"y\", field: \"age\", band: 0.5 },\n          text: { field: \"age\" },\n          baseline: { value: \"middle\" },\n          align: { value: \"center\" },\n          fill: { value: \"#000\" },\n        },\n      },\n    };\n\n    // Marks of Spec consist of 2 groups\n    // Group specific Axes + Marks + Scales are set first -> then groups\n    const groupAxes = (groupNum) => {\n      const groupTitle = `group${groupNum}-title`;\n      return {\n        orient: \"bottom\",\n        scale: \"x\",\n        format: \"s\",\n        title: this.params[groupTitle],\n        titleFont: \"var(--togostanza-font-family)\",\n        titleFontWeight: \"var(--togostanza-title-font-weight)\",\n        titleColor: \"var(--togostanza-title-font-color)\",\n      };\n    };\n\n    const groupMarks = (groupData) => {\n      return {\n        type: \"rect\",\n        from: { data: groupData },\n        encode: {\n          enter: {\n            x: { scale: \"x\", field: \"people\" },\n            x2: { scale: \"x\", value: 0 },\n            y: { scale: \"y\", field: \"age\" },\n            height: { scale: \"y\", band: 1, offset: -1 },\n            fill: { scale: \"c\", field: \"sex\" },\n          },\n        },\n      };\n    };\n\n    const groupScales = (num) => {\n      return {\n        name: \"x\",\n        type: \"linear\",\n        range:\n          num === 1\n            ? [{ signal: \"chartWidth\" }, 0]\n            : [0, { signal: \"chartWidth\" }],\n        nice: true,\n        zero: true,\n        domain: { data: \"population\", field: \"people\" },\n      };\n    };\n\n    const group1 = {\n      type: \"group\",\n\n      encode: {\n        update: {\n          x: { value: 0 },\n          height: { signal: \"height\" },\n        },\n      },\n      scales: [groupScales(1)],\n      axes: [groupAxes(1)],\n      marks: [groupMarks(\"females\")],\n    };\n\n    const group2 = {\n      type: \"group\",\n\n      encode: {\n        update: {\n          x: { signal: \"chartWidth + chartPad\" },\n          height: { signal: \"height\" },\n        },\n      },\n\n      scales: [groupScales(2)],\n      axes: [groupAxes(2)],\n      marks: [groupMarks(\"males\")],\n    };\n\n    const spec = {\n      $schema: \"https://vega.github.io/schema/vega/v5.json\",\n      width,\n      height,\n      padding: 5,\n      marks: [text, group1, group2],\n      scales,\n      signals,\n      data,\n    };\n\n    const el = this.root.querySelector(\"main\");\n    const opts = {\n      renderer: \"svg\",\n    };\n    await vegaEmbed(el, spec, opts);\n  }\n}\n"],"names":["vegaEmbed"],"mappings":"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"}