{"version":3,"file":"column-tree.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/NodeColumn.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/NodeColumn.vue?vue&type=template&id=3eed9a51&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/SearchSuggestions.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/SearchSuggestions.vue?vue&type=template&id=4dbbc744&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/app.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/app.vue?vue&type=template&id=3a8d23b8&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/index.js"],"sourcesContent":["<template>\n  <div class=\"column\" :class=\"{ '-fixed': fixedWidthColumns }\">\n    <span\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      class=\"node\"\n      :class=\"[\n        {\n          '-highlighted':\n            node.id === highlightedNode && hasChildren(node.children),\n        },\n        { '-with-border': showBorderNodes },\n      ]\"\n    >\n      <input\n        type=\"checkbox\"\n        :checked=\"checkedNodes.get(node.id)\"\n        @input=\"setCheckedNode(node)\"\n      />\n\n      <span\n        class=\"label\"\n        :class=\"`-${nodeContentAlignment}`\"\n        @click=\"hasChildren(node.children) ? setParent(node.id) : null\"\n      >\n        <strong class=\"title\">\n          {{ node[keys.label] }}\n        </strong>\n        <span v-if=\"valueObj.show\" class=\"value\">\n          {{ node[keys.value] ?? valueObj.fallback }}\n        </span>\n      </span>\n      <font-awesome-icon\n        v-if=\"hasChildren(node.children)\"\n        icon=\"chevron-right\"\n        class=\"icon\"\n      />\n    </span>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faChevronRight, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faChevronRight, faClipboard);\nexport default defineComponent({\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    layer: {\n      type: Number,\n      default: 0,\n    },\n    nodes: {\n      type: Array,\n      default: () => [],\n    },\n    children: {\n      type: Boolean,\n      default: false,\n    },\n    checkedNodes: {\n      type: Map,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    highlightedNode: {\n      type: [Number, String, null],\n      default: null,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n    fixedWidthColumns: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"setParent\", \"setCheckedNode\"],\n  setup(props, context) {\n    function hasChildren(childrenProp) {\n      if (typeof childrenProp === \"string\") {\n        childrenProp = childrenProp\n          .split(/,/)\n          .map(parseFloat)\n          .filter((prop) => !isNaN(prop));\n      }\n      return childrenProp && childrenProp.length > 0;\n    }\n\n    function setCheckedNode(node) {\n      context.emit(\"setCheckedNode\", node);\n    }\n\n    function setParent(id) {\n      context.emit(\"setParent\", [props.layer + 1, id]);\n    }\n    return {\n      setParent,\n      setCheckedNode,\n      hasChildren,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"column\" :class=\"{ '-fixed': fixedWidthColumns }\">\n    <span\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      class=\"node\"\n      :class=\"[\n        {\n          '-highlighted':\n            node.id === highlightedNode && hasChildren(node.children),\n        },\n        { '-with-border': showBorderNodes },\n      ]\"\n    >\n      <input\n        type=\"checkbox\"\n        :checked=\"checkedNodes.get(node.id)\"\n        @input=\"setCheckedNode(node)\"\n      />\n\n      <span\n        class=\"label\"\n        :class=\"`-${nodeContentAlignment}`\"\n        @click=\"hasChildren(node.children) ? setParent(node.id) : null\"\n      >\n        <strong class=\"title\">\n          {{ node[keys.label] }}\n        </strong>\n        <span v-if=\"valueObj.show\" class=\"value\">\n          {{ node[keys.value] ?? valueObj.fallback }}\n        </span>\n      </span>\n      <font-awesome-icon\n        v-if=\"hasChildren(node.children)\"\n        icon=\"chevron-right\"\n        class=\"icon\"\n      />\n    </span>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faChevronRight, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faChevronRight, faClipboard);\nexport default defineComponent({\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    layer: {\n      type: Number,\n      default: 0,\n    },\n    nodes: {\n      type: Array,\n      default: () => [],\n    },\n    children: {\n      type: Boolean,\n      default: false,\n    },\n    checkedNodes: {\n      type: Map,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    highlightedNode: {\n      type: [Number, String, null],\n      default: null,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n    fixedWidthColumns: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"setParent\", \"setCheckedNode\"],\n  setup(props, context) {\n    function hasChildren(childrenProp) {\n      if (typeof childrenProp === \"string\") {\n        childrenProp = childrenProp\n          .split(/,/)\n          .map(parseFloat)\n          .filter((prop) => !isNaN(prop));\n      }\n      return childrenProp && childrenProp.length > 0;\n    }\n\n    function setCheckedNode(node) {\n      context.emit(\"setCheckedNode\", node);\n    }\n\n    function setParent(id) {\n      context.emit(\"setParent\", [props.layer + 1, id]);\n    }\n    return {\n      setParent,\n      setCheckedNode,\n      hasChildren,\n    };\n  },\n});\n</script>\n","<template>\n  <div v-show=\"showSuggestions\" class=\"search-wrapper\">\n    <ul class=\"suggestions\">\n      <li\n        v-for=\"(node, index) of data\"\n        :key=\"index\"\n        :class=\"{ '-with-border': showBorderNodes }\"\n        @click=\"$emit('selectNode', node)\"\n      >\n        <span class=\"label\" :class=\"`-${nodeContentAlignment}`\">\n          <strong class=\"title\">{{ node[keys.label] }}</strong>\n          <span v-if=\"valueObj.show\" class=\"value\">\n            {{ node[keys.value] ?? valueObj.fallback }}\n          </span>\n        </span>\n        <span v-if=\"showPath\" class=\"value\">\n          Path :\n          <ruby v-for=\"(item, pathIndex) of node.path\" :key=\"pathIndex\">\n            {{ item.label }}/<rp>(</rp><rt> {{ item.id }}</rt\n            ><rp>)</rp>\n          </ruby>\n        </span>\n      </li>\n      <li v-if=\"data.length < 1\" class=\"no-results\">\n        {{ valueObj.fallback }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    showSuggestions: {\n      type: Boolean,\n      default: false,\n    },\n    showPath: {\n      type: Boolean,\n      default: false,\n    },\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    searchInput: {\n      type: String,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n  },\n  emits: [\"selectNode\"],\n});\n</script>\n","<template>\n  <div v-show=\"showSuggestions\" class=\"search-wrapper\">\n    <ul class=\"suggestions\">\n      <li\n        v-for=\"(node, index) of data\"\n        :key=\"index\"\n        :class=\"{ '-with-border': showBorderNodes }\"\n        @click=\"$emit('selectNode', node)\"\n      >\n        <span class=\"label\" :class=\"`-${nodeContentAlignment}`\">\n          <strong class=\"title\">{{ node[keys.label] }}</strong>\n          <span v-if=\"valueObj.show\" class=\"value\">\n            {{ node[keys.value] ?? valueObj.fallback }}\n          </span>\n        </span>\n        <span v-if=\"showPath\" class=\"value\">\n          Path :\n          <ruby v-for=\"(item, pathIndex) of node.path\" :key=\"pathIndex\">\n            {{ item.label }}/<rp>(</rp><rt> {{ item.id }}</rt\n            ><rp>)</rp>\n          </ruby>\n        </span>\n      </li>\n      <li v-if=\"data.length < 1\" class=\"no-results\">\n        {{ valueObj.fallback }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    showSuggestions: {\n      type: Boolean,\n      default: false,\n    },\n    showPath: {\n      type: Boolean,\n      default: false,\n    },\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    searchInput: {\n      type: String,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n  },\n  emits: [\"selectNode\"],\n});\n</script>\n","<template>\n  <section id=\"wrapper\">\n    <div\n      class=\"search-container\"\n      @mouseleave=\"state.showSuggestions ? toggleSuggestions() : null\"\n    >\n      <input\n        v-model=\"state.searchTerm\"\n        type=\"text\"\n        placeholder=\"Search for keywords or path*\"\n        class=\"search\"\n        @focus=\"toggleSuggestionsIfValid\"\n        @input=\"toggleSuggestionsIfValid\"\n      />\n      <small v-if=\"state.showPathExplanation\"\n        >*When searching by path please use the <em>id</em> followed by a\n        <em>/</em>. E.G.: 1/2/3</small\n      >\n      <search-suggestions\n        :show-suggestions=\"state.showSuggestions\"\n        :show-path=\"state.showPath\"\n        :search-input=\"state.searchTerm\"\n        :data=\"suggestions\"\n        :keys=\"state.keys\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        @selectNode=\"selectNode\"\n      />\n    </div>\n    <div id=\"tree\">\n      <NodeColumn\n        v-for=\"(column, index) of state.columnData.filter(\n          (col) => col?.length > 0\n        )\"\n        :key=\"index\"\n        :nodes=\"column\"\n        :layer=\"index\"\n        :checked-nodes=\"state.checkedNodes\"\n        :keys=\"state.keys\"\n        :highlighted-node=\"state.highligthedNodes[index]\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        :fixed-width-columns=\"state.fixedWidthColumns\"\n        @setParent=\"updatePartialColumnData\"\n        @setCheckedNode=\"updateCheckedNodes\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  reactive,\n  toRefs,\n  watchEffect,\n  ref,\n  computed,\n} from \"vue\";\nimport loadData from \"togostanza-utils/load-data\";\nimport metadata from \"./metadata.json\";\nimport NodeColumn from \"./NodeColumn.vue\";\nimport SearchSuggestions from \"./SearchSuggestions.vue\";\n\nfunction isRootNode(parent) {\n  return !parent || isNaN(parent);\n}\nfunction isTruthBool(str) {\n  return str === \"true\";\n}\n\n// TODO: set path for data objects\nexport default defineComponent({\n  components: { NodeColumn, SearchSuggestions },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  emits: [\"resetHighlightedNode\"],\n  setup(params) {\n    params = toRefs(params);\n    const layerRefs = ref([]);\n    const state = reactive({\n      keys: {\n        label: params?.labelKey?.value,\n        value: params?.valueKey?.value,\n      },\n      fallbackInCaseOfNoValue: params?.valueFallback.value,\n      fixedWidthColumns: isTruthBool(params?.fixedWidthColumns?.value),\n      showValue: isTruthBool(params?.showValue?.value),\n      showPath: isTruthBool(params?.showPath?.value),\n      showPathExplanation: isTruthBool(params?.showPathExplanation?.value),\n      showBorderNodes: isTruthBool(params?.showBorderNodes?.value),\n      nodeContentAlignment: params?.nodeContentAlignment?.value,\n      showSuggestions: false,\n      responseJSON: null,\n      columnData: [],\n      checkedNodes: new Map(),\n      searchTerm: \"\",\n      highligthedNodes: [],\n    });\n    watchEffect(\n      async () => {\n        state.responseJSON = await loadData(\n          params?.dataUrl?.value,\n          params?.dataType?.value,\n          params?.main\n        );\n        state.responseJSON = state.responseJSON.map((node) => {\n          return { ...node, path: getPath(node) };\n        });\n        state.checkedNodes = new Map();\n      },\n      { immediate: true }\n    );\n    watchEffect(() => {\n      const data = state.responseJSON || [];\n      state.columnData[0] = data.filter((obj) => isRootNode(obj.parent));\n    });\n    function updateCheckedNodes(node) {\n      const { id, ...obj } = node;\n      state.checkedNodes.has(id)\n        ? state.checkedNodes.delete(id)\n        : state.checkedNodes.set(id, { id, ...obj });\n      // TODO: add event handler\n      // console.log([...state.checkedNodes.values()]);\n    }\n    function getChildNodes([layer, parentId]) {\n      state.highligthedNodes[layer - 1] = parentId;\n      return state.responseJSON.filter((obj) => obj.parent === parentId);\n    }\n    function updatePartialColumnData([layer, parentId]) {\n      const children = getChildNodes([layer, parentId]);\n      const indexesToRemove = state.columnData.length - layer;\n      state.columnData.splice(layer, indexesToRemove, children);\n      return children;\n    }\n    function isNormalSearchHit(node) {\n      return node[params?.searchKey?.value]\n        ?.toString()\n        .toLowerCase()\n        .includes(state.searchTerm.toLowerCase());\n    }\n    function isPathSearchHit(node) {\n      return node.path\n        .map((node) => node.id)\n        .join(\"/\")\n        .toLowerCase()\n        .startsWith(state.searchTerm.toLowerCase());\n    }\n    const valueObj = computed(() => {\n      return { show: state.showValue, fallback: state.fallbackInCaseOfNoValue };\n    });\n    const isValidSearchNode = computed(() => {\n      return state.searchTerm.length > 0;\n    });\n    function selectNode(node) {\n      state.highligthedNodes = [];\n      state.columnData = [\n        state.responseJSON.filter((obj) => isRootNode(obj.parent)),\n        ...[...node.path].map((node, index) => {\n          return getChildNodes([index + 1, node.id]);\n        }),\n      ];\n      state.checkedNodes = new Map([[node.id, node]]);\n      toggleSuggestions();\n    }\n    function getPath(node) {\n      const path = [];\n      let parent = { id: node.id, label: node.label };\n      while (parent.id) {\n        path.push(parent);\n        const obj = state.responseJSON.find((obj) => obj.id === parent.id);\n        parent = { id: obj?.parent, label: obj?.label };\n      }\n      return path.reverse();\n    }\n    function toggleSuggestionsIfValid() {\n      if (!isValidSearchNode.value || state.showSuggestions) {\n        return;\n      }\n      toggleSuggestions();\n    }\n    function toggleSuggestions() {\n      state.showSuggestions = !state.showSuggestions;\n    }\n    const suggestions = computed(() => {\n      if (state.searchTerm.includes(\"/\")) {\n        return state.responseJSON.filter(isPathSearchHit);\n      }\n      return state.responseJSON.filter(isNormalSearchHit);\n    });\n    return {\n      isValidSearchNode,\n      state,\n      layerRefs,\n      updateCheckedNodes,\n      updatePartialColumnData,\n      suggestions,\n      valueObj,\n      selectNode,\n      toggleSuggestions,\n      toggleSuggestionsIfValid,\n    };\n  },\n});\n</script>\n","<template>\n  <section id=\"wrapper\">\n    <div\n      class=\"search-container\"\n      @mouseleave=\"state.showSuggestions ? toggleSuggestions() : null\"\n    >\n      <input\n        v-model=\"state.searchTerm\"\n        type=\"text\"\n        placeholder=\"Search for keywords or path*\"\n        class=\"search\"\n        @focus=\"toggleSuggestionsIfValid\"\n        @input=\"toggleSuggestionsIfValid\"\n      />\n      <small v-if=\"state.showPathExplanation\"\n        >*When searching by path please use the <em>id</em> followed by a\n        <em>/</em>. E.G.: 1/2/3</small\n      >\n      <search-suggestions\n        :show-suggestions=\"state.showSuggestions\"\n        :show-path=\"state.showPath\"\n        :search-input=\"state.searchTerm\"\n        :data=\"suggestions\"\n        :keys=\"state.keys\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        @selectNode=\"selectNode\"\n      />\n    </div>\n    <div id=\"tree\">\n      <NodeColumn\n        v-for=\"(column, index) of state.columnData.filter(\n          (col) => col?.length > 0\n        )\"\n        :key=\"index\"\n        :nodes=\"column\"\n        :layer=\"index\"\n        :checked-nodes=\"state.checkedNodes\"\n        :keys=\"state.keys\"\n        :highlighted-node=\"state.highligthedNodes[index]\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        :fixed-width-columns=\"state.fixedWidthColumns\"\n        @setParent=\"updatePartialColumnData\"\n        @setCheckedNode=\"updateCheckedNodes\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  reactive,\n  toRefs,\n  watchEffect,\n  ref,\n  computed,\n} from \"vue\";\nimport loadData from \"togostanza-utils/load-data\";\nimport metadata from \"./metadata.json\";\nimport NodeColumn from \"./NodeColumn.vue\";\nimport SearchSuggestions from \"./SearchSuggestions.vue\";\n\nfunction isRootNode(parent) {\n  return !parent || isNaN(parent);\n}\nfunction isTruthBool(str) {\n  return str === \"true\";\n}\n\n// TODO: set path for data objects\nexport default defineComponent({\n  components: { NodeColumn, SearchSuggestions },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  emits: [\"resetHighlightedNode\"],\n  setup(params) {\n    params = toRefs(params);\n    const layerRefs = ref([]);\n    const state = reactive({\n      keys: {\n        label: params?.labelKey?.value,\n        value: params?.valueKey?.value,\n      },\n      fallbackInCaseOfNoValue: params?.valueFallback.value,\n      fixedWidthColumns: isTruthBool(params?.fixedWidthColumns?.value),\n      showValue: isTruthBool(params?.showValue?.value),\n      showPath: isTruthBool(params?.showPath?.value),\n      showPathExplanation: isTruthBool(params?.showPathExplanation?.value),\n      showBorderNodes: isTruthBool(params?.showBorderNodes?.value),\n      nodeContentAlignment: params?.nodeContentAlignment?.value,\n      showSuggestions: false,\n      responseJSON: null,\n      columnData: [],\n      checkedNodes: new Map(),\n      searchTerm: \"\",\n      highligthedNodes: [],\n    });\n    watchEffect(\n      async () => {\n        state.responseJSON = await loadData(\n          params?.dataUrl?.value,\n          params?.dataType?.value,\n          params?.main\n        );\n        state.responseJSON = state.responseJSON.map((node) => {\n          return { ...node, path: getPath(node) };\n        });\n        state.checkedNodes = new Map();\n      },\n      { immediate: true }\n    );\n    watchEffect(() => {\n      const data = state.responseJSON || [];\n      state.columnData[0] = data.filter((obj) => isRootNode(obj.parent));\n    });\n    function updateCheckedNodes(node) {\n      const { id, ...obj } = node;\n      state.checkedNodes.has(id)\n        ? state.checkedNodes.delete(id)\n        : state.checkedNodes.set(id, { id, ...obj });\n      // TODO: add event handler\n      // console.log([...state.checkedNodes.values()]);\n    }\n    function getChildNodes([layer, parentId]) {\n      state.highligthedNodes[layer - 1] = parentId;\n      return state.responseJSON.filter((obj) => obj.parent === parentId);\n    }\n    function updatePartialColumnData([layer, parentId]) {\n      const children = getChildNodes([layer, parentId]);\n      const indexesToRemove = state.columnData.length - layer;\n      state.columnData.splice(layer, indexesToRemove, children);\n      return children;\n    }\n    function isNormalSearchHit(node) {\n      return node[params?.searchKey?.value]\n        ?.toString()\n        .toLowerCase()\n        .includes(state.searchTerm.toLowerCase());\n    }\n    function isPathSearchHit(node) {\n      return node.path\n        .map((node) => node.id)\n        .join(\"/\")\n        .toLowerCase()\n        .startsWith(state.searchTerm.toLowerCase());\n    }\n    const valueObj = computed(() => {\n      return { show: state.showValue, fallback: state.fallbackInCaseOfNoValue };\n    });\n    const isValidSearchNode = computed(() => {\n      return state.searchTerm.length > 0;\n    });\n    function selectNode(node) {\n      state.highligthedNodes = [];\n      state.columnData = [\n        state.responseJSON.filter((obj) => isRootNode(obj.parent)),\n        ...[...node.path].map((node, index) => {\n          return getChildNodes([index + 1, node.id]);\n        }),\n      ];\n      state.checkedNodes = new Map([[node.id, node]]);\n      toggleSuggestions();\n    }\n    function getPath(node) {\n      const path = [];\n      let parent = { id: node.id, label: node.label };\n      while (parent.id) {\n        path.push(parent);\n        const obj = state.responseJSON.find((obj) => obj.id === parent.id);\n        parent = { id: obj?.parent, label: obj?.label };\n      }\n      return path.reverse();\n    }\n    function toggleSuggestionsIfValid() {\n      if (!isValidSearchNode.value || state.showSuggestions) {\n        return;\n      }\n      toggleSuggestions();\n    }\n    function toggleSuggestions() {\n      state.showSuggestions = !state.showSuggestions;\n    }\n    const suggestions = computed(() => {\n      if (state.searchTerm.includes(\"/\")) {\n        return state.responseJSON.filter(isPathSearchHit);\n      }\n      return state.responseJSON.filter(isNormalSearchHit);\n    });\n    return {\n      isValidSearchNode,\n      state,\n      layerRefs,\n      updateCheckedNodes,\n      updatePartialColumnData,\n      suggestions,\n      valueObj,\n      selectNode,\n      toggleSuggestions,\n      toggleSuggestionsIfValid,\n    };\n  },\n});\n</script>\n","import Stanza from \"togostanza/stanza\";\nimport { createApp } from \"vue\";\nimport App from \"./app.vue\";\nimport { appendCustomCss } from \"togostanza-utils\";\n\nexport default class ColumnTree extends Stanza {\n  async render() {\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const main = this.root.querySelector(\"main\");\n    main.parentNode.style.backgroundColor =\n      \"var(--togostanza-background-color)\";\n\n    this._app?.unmount();\n    this._app = createApp(App, { ...this.params, main });\n    this._app.mount(main);\n  }\n}\n"],"names":["_hoisted_3","_createElementBlock","_normalizeClass","_Fragment","_renderList","_createElementVNode","_toDisplayString","_hoisted_4","_createBlock","_hoisted_1","_hoisted_2","_hoisted_8","_hoisted_9","_withDirectives","_openBlock","_hoisted_5","_hoisted_6","NodeColumn","SearchSuggestions","_vModelText","_createVNode","App"],"mappings":"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"}