{"version":3,"file":"column-tree.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/NodeColumn.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/NodeColumn.vue?vue&type=template&id=3eed9a51&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/SearchSuggestions.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/SearchSuggestions.vue?vue&type=template&id=4dbbc744&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/app.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/app.vue?vue&type=template&id=3a8d23b8&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/index.js"],"sourcesContent":["<template>\n  <div class=\"column\">\n    <span\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      class=\"node\"\n      :class=\"[\n        {\n          '-highlighted':\n            node.id === highlightedNode && hasChildren(node.children),\n        },\n        { '-with-border': showBorderNodes },\n      ]\"\n    >\n      <input\n        type=\"checkbox\"\n        :checked=\"checkedNodes.get(node.id)\"\n        @input=\"setCheckedNode(node)\"\n      />\n\n      <span\n        class=\"label\"\n        :class=\"`-${nodeContentAlignment}`\"\n        @click=\"hasChildren(node.children) ? setParent(node.id) : null\"\n      >\n        <strong class=\"title\">\n          {{ node[keys.label] }}\n        </strong>\n        <span v-if=\"valueObj.show\" class=\"value\">\n          {{ node[keys.value] ?? valueObj.fallback }}\n        </span>\n      </span>\n      <font-awesome-icon\n        v-if=\"hasChildren(node.children)\"\n        icon=\"chevron-right\"\n        class=\"icon\"\n      />\n    </span>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faChevronRight, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faChevronRight, faClipboard);\nexport default defineComponent({\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    layer: {\n      type: Number,\n      default: 0,\n    },\n    nodes: {\n      type: Array,\n      default: () => [],\n    },\n    children: {\n      type: Boolean,\n      default: false,\n    },\n    checkedNodes: {\n      type: Map,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    highlightedNode: {\n      type: [Number, String, null],\n      default: null,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n  },\n  emits: [\"setParent\", \"setCheckedNode\"],\n  setup(props, context) {\n    function hasChildren(childrenProp) {\n      if (typeof childrenProp === \"string\") {\n        childrenProp = childrenProp\n          .split(/,/)\n          .map(parseFloat)\n          .filter((prop) => !isNaN(prop));\n      }\n      return childrenProp && childrenProp.length > 0;\n    }\n\n    function setCheckedNode(node) {\n      context.emit(\"setCheckedNode\", node);\n    }\n\n    function setParent(id) {\n      context.emit(\"setParent\", [props.layer + 1, id]);\n    }\n    return {\n      setParent,\n      setCheckedNode,\n      hasChildren,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"column\">\n    <span\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      class=\"node\"\n      :class=\"[\n        {\n          '-highlighted':\n            node.id === highlightedNode && hasChildren(node.children),\n        },\n        { '-with-border': showBorderNodes },\n      ]\"\n    >\n      <input\n        type=\"checkbox\"\n        :checked=\"checkedNodes.get(node.id)\"\n        @input=\"setCheckedNode(node)\"\n      />\n\n      <span\n        class=\"label\"\n        :class=\"`-${nodeContentAlignment}`\"\n        @click=\"hasChildren(node.children) ? setParent(node.id) : null\"\n      >\n        <strong class=\"title\">\n          {{ node[keys.label] }}\n        </strong>\n        <span v-if=\"valueObj.show\" class=\"value\">\n          {{ node[keys.value] ?? valueObj.fallback }}\n        </span>\n      </span>\n      <font-awesome-icon\n        v-if=\"hasChildren(node.children)\"\n        icon=\"chevron-right\"\n        class=\"icon\"\n      />\n    </span>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faChevronRight, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faChevronRight, faClipboard);\nexport default defineComponent({\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    layer: {\n      type: Number,\n      default: 0,\n    },\n    nodes: {\n      type: Array,\n      default: () => [],\n    },\n    children: {\n      type: Boolean,\n      default: false,\n    },\n    checkedNodes: {\n      type: Map,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    highlightedNode: {\n      type: [Number, String, null],\n      default: null,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n  },\n  emits: [\"setParent\", \"setCheckedNode\"],\n  setup(props, context) {\n    function hasChildren(childrenProp) {\n      if (typeof childrenProp === \"string\") {\n        childrenProp = childrenProp\n          .split(/,/)\n          .map(parseFloat)\n          .filter((prop) => !isNaN(prop));\n      }\n      return childrenProp && childrenProp.length > 0;\n    }\n\n    function setCheckedNode(node) {\n      context.emit(\"setCheckedNode\", node);\n    }\n\n    function setParent(id) {\n      context.emit(\"setParent\", [props.layer + 1, id]);\n    }\n    return {\n      setParent,\n      setCheckedNode,\n      hasChildren,\n    };\n  },\n});\n</script>\n","<template>\n  <div v-show=\"showSuggestions\" class=\"search-wrapper\">\n    <ul class=\"suggestions\">\n      <li\n        v-for=\"(node, index) of data\"\n        :key=\"index\"\n        :class=\"{ '-with-border': showBorderNodes }\"\n        @click=\"$emit('selectNode', node)\"\n      >\n        <span class=\"label\" :class=\"`-${nodeContentAlignment}`\">\n          <strong class=\"title\">{{ node[keys.label] }}</strong>\n          <span v-if=\"valueObj.show\" class=\"value\">\n            {{ node[keys.value] ?? valueObj.fallback }}\n          </span>\n        </span>\n        <span v-if=\"showPath\" class=\"value\">\n          Path :\n          <ruby v-for=\"(item, pathIndex) of node.path\" :key=\"pathIndex\">\n            {{ item.label }}/<rp>(</rp><rt> {{ item.id }}</rt\n            ><rp>)</rp>\n          </ruby>\n        </span>\n      </li>\n      <li v-if=\"data.length < 1\" class=\"no-results\">\n        {{ valueObj.fallback }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    showSuggestions: {\n      type: Boolean,\n      default: false,\n    },\n    showPath: {\n      type: Boolean,\n      default: false,\n    },\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    searchInput: {\n      type: String,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n  },\n  emits: [\"selectNode\"],\n});\n</script>\n","<template>\n  <div v-show=\"showSuggestions\" class=\"search-wrapper\">\n    <ul class=\"suggestions\">\n      <li\n        v-for=\"(node, index) of data\"\n        :key=\"index\"\n        :class=\"{ '-with-border': showBorderNodes }\"\n        @click=\"$emit('selectNode', node)\"\n      >\n        <span class=\"label\" :class=\"`-${nodeContentAlignment}`\">\n          <strong class=\"title\">{{ node[keys.label] }}</strong>\n          <span v-if=\"valueObj.show\" class=\"value\">\n            {{ node[keys.value] ?? valueObj.fallback }}\n          </span>\n        </span>\n        <span v-if=\"showPath\" class=\"value\">\n          Path :\n          <ruby v-for=\"(item, pathIndex) of node.path\" :key=\"pathIndex\">\n            {{ item.label }}/<rp>(</rp><rt> {{ item.id }}</rt\n            ><rp>)</rp>\n          </ruby>\n        </span>\n      </li>\n      <li v-if=\"data.length < 1\" class=\"no-results\">\n        {{ valueObj.fallback }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    showSuggestions: {\n      type: Boolean,\n      default: false,\n    },\n    showPath: {\n      type: Boolean,\n      default: false,\n    },\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    searchInput: {\n      type: String,\n      required: true,\n    },\n    keys: {\n      type: Object,\n      required: true,\n    },\n    valueObj: {\n      type: Object,\n      required: true,\n    },\n    showBorderNodes: {\n      type: Boolean,\n      default: false,\n    },\n    nodeContentAlignment: {\n      type: String,\n      default: \"horizontal\",\n    },\n  },\n  emits: [\"selectNode\"],\n});\n</script>\n","<template>\n  <section id=\"wrapper\">\n    <div\n      class=\"search-container\"\n      @mouseleave=\"state.showSuggestions ? toggleSuggestions() : null\"\n    >\n      <input\n        v-model=\"state.searchTerm\"\n        type=\"text\"\n        placeholder=\"Search for keywords or path*\"\n        class=\"search\"\n        @focus=\"toggleSuggestionsIfValid\"\n        @input=\"toggleSuggestionsIfValid\"\n      />\n      <small v-if=\"state.showPathExplanation\"\n        >*When searching by path please use the <em>id</em> followed by a\n        <em>/</em>. E.G.: 1/2/3</small\n      >\n      <search-suggestions\n        :show-suggestions=\"state.showSuggestions\"\n        :show-path=\"state.showPath\"\n        :search-input=\"state.searchTerm\"\n        :data=\"suggestions\"\n        :keys=\"state.keys\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        @selectNode=\"selectNode\"\n      />\n    </div>\n    <div id=\"tree\">\n      <NodeColumn\n        v-for=\"(column, index) of state.columnData.filter(\n          (col) => col?.length > 0\n        )\"\n        :key=\"index\"\n        :nodes=\"column\"\n        :layer=\"index\"\n        :checked-nodes=\"state.checkedNodes\"\n        :keys=\"state.keys\"\n        :highlighted-node=\"state.highligthedNodes[index]\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        @setParent=\"updatePartialColumnData\"\n        @setCheckedNode=\"updateCheckedNodes\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  reactive,\n  toRefs,\n  watchEffect,\n  ref,\n  computed,\n} from \"vue\";\nimport loadData from \"togostanza-utils/load-data\";\nimport metadata from \"./metadata.json\";\nimport NodeColumn from \"./NodeColumn.vue\";\nimport SearchSuggestions from \"./SearchSuggestions.vue\";\n\nfunction isRootNode(parent) {\n  return !parent || isNaN(parent);\n}\nfunction isTruthBool(str) {\n  return str === \"true\";\n}\n\n// TODO: set path for data objects\nexport default defineComponent({\n  components: { NodeColumn, SearchSuggestions },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  emits: [\"resetHighlightedNode\"],\n  setup(params) {\n    params = toRefs(params);\n    const layerRefs = ref([]);\n    const state = reactive({\n      keys: {\n        label: params.labelKey.value,\n        value: params.valueKey.value,\n      },\n      fallbackInCaseOfNoValue: params.valueFallback.value,\n      showValue: isTruthBool(params.showValue.value),\n      showPath: isTruthBool(params.showPath.value),\n      showPathExplanation: isTruthBool(params.showPathExplanation.value),\n      showBorderNodes: isTruthBool(params.showBorderNodes.value),\n      nodeContentAlignment: params.nodeContentAlignment.value,\n      showSuggestions: false,\n      responseJSON: null,\n      columnData: [],\n      checkedNodes: new Map(),\n      searchTerm: \"\",\n      highligthedNodes: [],\n    });\n    watchEffect(\n      async () => {\n        state.responseJSON = await loadData(\n          params.dataUrl.value,\n          params.dataType.value,\n          params.main\n        );\n        state.responseJSON = state.responseJSON.map((node) => {\n          return { ...node, path: getPath(node) };\n        });\n        state.checkedNodes = new Map();\n      },\n      { immediate: true }\n    );\n    watchEffect(() => {\n      const data = state.responseJSON || [];\n      state.columnData[0] = data.filter((obj) => isRootNode(obj.parent));\n    });\n    function updateCheckedNodes(node) {\n      const { id, ...obj } = node;\n      state.checkedNodes.has(id)\n        ? state.checkedNodes.delete(id)\n        : state.checkedNodes.set(id, { id, ...obj });\n      // TODO: add event handler\n      // console.log([...state.checkedNodes.values()]);\n    }\n    function getChildNodes([layer, parentId]) {\n      state.highligthedNodes[layer - 1] = parentId;\n      return state.responseJSON.filter((obj) => obj.parent === parentId);\n    }\n    function updatePartialColumnData([layer, parentId]) {\n      const children = getChildNodes([layer, parentId]);\n      const indexesToRemove = state.columnData.length - layer;\n      state.columnData.splice(layer, indexesToRemove, children);\n      return children;\n    }\n    function isNormalSearchHit(node) {\n      return node[params.searchKey.value]\n        ?.toString()\n        .toLowerCase()\n        .includes(state.searchTerm.toLowerCase());\n    }\n    function isPathSearchHit(node) {\n      return node.path\n        .map((node) => node.id)\n        .join(\"/\")\n        .toLowerCase()\n        .startsWith(state.searchTerm.toLowerCase());\n    }\n    const valueObj = computed(() => {\n      return { show: state.showValue, fallback: state.fallbackInCaseOfNoValue };\n    });\n    const isValidSearchNode = computed(() => {\n      return state.searchTerm.length > 0;\n    });\n    function selectNode(node) {\n      state.highligthedNodes = [];\n      state.columnData = [\n        state.responseJSON.filter((obj) => isRootNode(obj.parent)),\n        ...[...node.path].map((node, index) => {\n          return getChildNodes([index + 1, node.id]);\n        }),\n      ];\n      state.checkedNodes = new Map([[node.id, node]]);\n      toggleSuggestions();\n    }\n    function getPath(node) {\n      const path = [];\n      let parent = { id: node.id, label: node.label };\n      while (parent.id) {\n        path.push(parent);\n        const obj = state.responseJSON.find((obj) => obj.id === parent.id);\n        parent = { id: obj?.parent, label: obj?.label };\n      }\n      return path.reverse();\n    }\n    function toggleSuggestionsIfValid() {\n      if (!isValidSearchNode.value || state.showSuggestions) {\n        return;\n      }\n      toggleSuggestions();\n    }\n    function toggleSuggestions() {\n      state.showSuggestions = !state.showSuggestions;\n    }\n    const suggestions = computed(() => {\n      if (state.searchTerm.includes(\"/\")) {\n        return state.responseJSON.filter(isPathSearchHit);\n      }\n      return state.responseJSON.filter(isNormalSearchHit);\n    });\n    return {\n      isValidSearchNode,\n      state,\n      layerRefs,\n      updateCheckedNodes,\n      updatePartialColumnData,\n      suggestions,\n      valueObj,\n      selectNode,\n      toggleSuggestions,\n      toggleSuggestionsIfValid,\n    };\n  },\n});\n</script>\n","<template>\n  <section id=\"wrapper\">\n    <div\n      class=\"search-container\"\n      @mouseleave=\"state.showSuggestions ? toggleSuggestions() : null\"\n    >\n      <input\n        v-model=\"state.searchTerm\"\n        type=\"text\"\n        placeholder=\"Search for keywords or path*\"\n        class=\"search\"\n        @focus=\"toggleSuggestionsIfValid\"\n        @input=\"toggleSuggestionsIfValid\"\n      />\n      <small v-if=\"state.showPathExplanation\"\n        >*When searching by path please use the <em>id</em> followed by a\n        <em>/</em>. E.G.: 1/2/3</small\n      >\n      <search-suggestions\n        :show-suggestions=\"state.showSuggestions\"\n        :show-path=\"state.showPath\"\n        :search-input=\"state.searchTerm\"\n        :data=\"suggestions\"\n        :keys=\"state.keys\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        @selectNode=\"selectNode\"\n      />\n    </div>\n    <div id=\"tree\">\n      <NodeColumn\n        v-for=\"(column, index) of state.columnData.filter(\n          (col) => col?.length > 0\n        )\"\n        :key=\"index\"\n        :nodes=\"column\"\n        :layer=\"index\"\n        :checked-nodes=\"state.checkedNodes\"\n        :keys=\"state.keys\"\n        :highlighted-node=\"state.highligthedNodes[index]\"\n        :value-obj=\"valueObj\"\n        :show-border-nodes=\"state.showBorderNodes\"\n        :node-content-alignment=\"state.nodeContentAlignment\"\n        @setParent=\"updatePartialColumnData\"\n        @setCheckedNode=\"updateCheckedNodes\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  reactive,\n  toRefs,\n  watchEffect,\n  ref,\n  computed,\n} from \"vue\";\nimport loadData from \"togostanza-utils/load-data\";\nimport metadata from \"./metadata.json\";\nimport NodeColumn from \"./NodeColumn.vue\";\nimport SearchSuggestions from \"./SearchSuggestions.vue\";\n\nfunction isRootNode(parent) {\n  return !parent || isNaN(parent);\n}\nfunction isTruthBool(str) {\n  return str === \"true\";\n}\n\n// TODO: set path for data objects\nexport default defineComponent({\n  components: { NodeColumn, SearchSuggestions },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  emits: [\"resetHighlightedNode\"],\n  setup(params) {\n    params = toRefs(params);\n    const layerRefs = ref([]);\n    const state = reactive({\n      keys: {\n        label: params.labelKey.value,\n        value: params.valueKey.value,\n      },\n      fallbackInCaseOfNoValue: params.valueFallback.value,\n      showValue: isTruthBool(params.showValue.value),\n      showPath: isTruthBool(params.showPath.value),\n      showPathExplanation: isTruthBool(params.showPathExplanation.value),\n      showBorderNodes: isTruthBool(params.showBorderNodes.value),\n      nodeContentAlignment: params.nodeContentAlignment.value,\n      showSuggestions: false,\n      responseJSON: null,\n      columnData: [],\n      checkedNodes: new Map(),\n      searchTerm: \"\",\n      highligthedNodes: [],\n    });\n    watchEffect(\n      async () => {\n        state.responseJSON = await loadData(\n          params.dataUrl.value,\n          params.dataType.value,\n          params.main\n        );\n        state.responseJSON = state.responseJSON.map((node) => {\n          return { ...node, path: getPath(node) };\n        });\n        state.checkedNodes = new Map();\n      },\n      { immediate: true }\n    );\n    watchEffect(() => {\n      const data = state.responseJSON || [];\n      state.columnData[0] = data.filter((obj) => isRootNode(obj.parent));\n    });\n    function updateCheckedNodes(node) {\n      const { id, ...obj } = node;\n      state.checkedNodes.has(id)\n        ? state.checkedNodes.delete(id)\n        : state.checkedNodes.set(id, { id, ...obj });\n      // TODO: add event handler\n      // console.log([...state.checkedNodes.values()]);\n    }\n    function getChildNodes([layer, parentId]) {\n      state.highligthedNodes[layer - 1] = parentId;\n      return state.responseJSON.filter((obj) => obj.parent === parentId);\n    }\n    function updatePartialColumnData([layer, parentId]) {\n      const children = getChildNodes([layer, parentId]);\n      const indexesToRemove = state.columnData.length - layer;\n      state.columnData.splice(layer, indexesToRemove, children);\n      return children;\n    }\n    function isNormalSearchHit(node) {\n      return node[params.searchKey.value]\n        ?.toString()\n        .toLowerCase()\n        .includes(state.searchTerm.toLowerCase());\n    }\n    function isPathSearchHit(node) {\n      return node.path\n        .map((node) => node.id)\n        .join(\"/\")\n        .toLowerCase()\n        .startsWith(state.searchTerm.toLowerCase());\n    }\n    const valueObj = computed(() => {\n      return { show: state.showValue, fallback: state.fallbackInCaseOfNoValue };\n    });\n    const isValidSearchNode = computed(() => {\n      return state.searchTerm.length > 0;\n    });\n    function selectNode(node) {\n      state.highligthedNodes = [];\n      state.columnData = [\n        state.responseJSON.filter((obj) => isRootNode(obj.parent)),\n        ...[...node.path].map((node, index) => {\n          return getChildNodes([index + 1, node.id]);\n        }),\n      ];\n      state.checkedNodes = new Map([[node.id, node]]);\n      toggleSuggestions();\n    }\n    function getPath(node) {\n      const path = [];\n      let parent = { id: node.id, label: node.label };\n      while (parent.id) {\n        path.push(parent);\n        const obj = state.responseJSON.find((obj) => obj.id === parent.id);\n        parent = { id: obj?.parent, label: obj?.label };\n      }\n      return path.reverse();\n    }\n    function toggleSuggestionsIfValid() {\n      if (!isValidSearchNode.value || state.showSuggestions) {\n        return;\n      }\n      toggleSuggestions();\n    }\n    function toggleSuggestions() {\n      state.showSuggestions = !state.showSuggestions;\n    }\n    const suggestions = computed(() => {\n      if (state.searchTerm.includes(\"/\")) {\n        return state.responseJSON.filter(isPathSearchHit);\n      }\n      return state.responseJSON.filter(isNormalSearchHit);\n    });\n    return {\n      isValidSearchNode,\n      state,\n      layerRefs,\n      updateCheckedNodes,\n      updatePartialColumnData,\n      suggestions,\n      valueObj,\n      selectNode,\n      toggleSuggestions,\n      toggleSuggestionsIfValid,\n    };\n  },\n});\n</script>\n","import Stanza from \"togostanza/stanza\";\nimport { createApp } from \"vue\";\nimport App from \"./app.vue\";\nimport { appendCustomCss } from \"togostanza-utils\";\n\nexport default class ColumnTree extends Stanza {\n  async render() {\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const main = this.root.querySelector(\"main\");\n    main.parentNode.style.backgroundColor =\n      \"var(--togostanza-background-color)\";\n\n    this._app?.unmount();\n    this._app = createApp(App, { ...this.params, main });\n    this._app.mount(main);\n  }\n}\n"],"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_4","_hoisted_5","_createBlock","_hoisted_2","_hoisted_6","_hoisted_8","_hoisted_9","NodeColumn","SearchSuggestions","_createVNode","App"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC;AACxC,eAAe,eAAe,CAAC;EAC7B,UAAU,EAAE;IACV,eAAe;GAChB;EACD,KAAK,EAAE;IACL,KAAK,EAAE;MACL,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,CAAC;KACX;IACD,KAAK,EAAE;MACL,IAAI,EAAE,KAAK;MACX,OAAO,EAAE,MAAM,EAAE;KAClB;IACD,QAAQ,EAAE;MACR,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,YAAY,EAAE;MACZ,IAAI,EAAE,GAAG;MACT,QAAQ,EAAE,IAAI;KACf;IACD,IAAI,EAAE;MACJ,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;MACR,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAE,IAAI;KACf;IACD,eAAe,EAAE;MACf,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC;MAC5B,OAAO,EAAE,IAAI;KACd;IACD,eAAe,EAAE;MACf,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,oBAAoB,EAAE;MACpB,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,YAAY;KACtB;GACF;EACD,KAAK,EAAE,CAAC,WAAW,EAAE,gBAAgB,CAAC;EACtC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE;IACpB,SAAS,WAAW,CAAC,YAAY,EAAE;MACjC,IAAI,OAAO,iBAAiB,QAAQ,EAAE;QACpC,eAAe;WACZ,KAAK,CAAC,GAAG;WACT,GAAG,CAAC,UAAU;WACd,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;MAEnC,OAAO,gBAAgB,YAAY,CAAC,SAAS,CAAC;;;IAGhD,SAAS,cAAc,CAAC,IAAI,EAAE;MAC5B,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC;;;IAGtC,SAAS,SAAS,CAAC,EAAE,EAAE;MACrB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;;IAElD,OAAO;MACL,SAAS;MACT,cAAc;MACd,WAAW;KACZ;GACF;AACH,CAAC,CAAC;;uBCjHK,KAAK,EAAC,QAAQ;;;uBAwBL,KAAK,EAAC,OAAO;;;EAGM,KAAK,EAAC,OAAO;;;;;;uBA3B9CA,0BAAAC;sBACED,8CACiB,UAAK,GAAb;2BADTA;QAEG,GAAG,EAAE,IAAI,CAAC,EAAE;QACb,KAAK,kBAAC;;;;;;;;QASNE;UACE,IAAI,EAAC;UACJ,OAAO,EAAE,iBAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;UACjC,OAAK,aAAE,mBAAc,CAAC,IAAI;;QAG7BA;UACE,KAAK,kBAAC,aACM,yBAAoB;UAC/B,OAAK,aAAE,gBAAW,CAAC,IAAI,CAAC,QAAQ,IAAI,cAAS,CAAC,IAAI,CAAC,EAAE;;UAEtDA,0BAAAC,8BACK,IAAI,CAAC,SAAI,CAAC,KAAK;WAER,aAAQ,CAAC,IAAI;4BAAzBH,2BAAAI,8BACK,IAAI,CAAC,SAAI,CAAC,KAAK,KAAK,aAAQ,CAAC;;;SAI5B,gBAAW,CAAC,IAAI,CAAC,QAAQ;0BADjCC;;cAEE,IAAI,EAAC;cACL,KAAK,EAAC;;;;;;;;;;;ACFd,eAAe,eAAe,CAAC;EAC7B,KAAK,EAAE;IACL,eAAe,EAAE;MACf,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,QAAQ,EAAE;MACR,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,IAAI,EAAE;MACJ,IAAI,EAAE,KAAK;MACX,OAAO,EAAE,MAAM,EAAE;KAClB;IACD,WAAW,EAAE;MACX,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAE,IAAI;KACf;IACD,IAAI,EAAE;MACJ,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;MACR,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAE,IAAI;KACf;IACD,eAAe,EAAE;MACf,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,oBAAoB,EAAE;MACpB,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,YAAY;KACtB;GACF;EACD,KAAK,EAAE,CAAC,YAAY,CAAC;AACvB,CAAC,CAAC;;uBCpE8B,KAAK,EAAC,gBAAgB;uBAC9C,KAAK,EAAC,aAAa;;uBAQT,KAAK,EAAC,OAAO;;;EACM,KAAK,EAAC,OAAO;;;;EAIpB,KAAK,EAAC,OAAO;;4DAEjC;kCACmBH,gBAAU,YAAN,GAAC;kCACrBA,4BAAI,GAAC;;;EAIe,KAAK,EAAC,YAAY;;;;sCAtBjDF,0BAAAC;IACEC,sBAAAI;wBACEN,8CAC0B,SAAI,GAApB,IAAI,EAAE,KAAK;6BADrBA;UAEG,GAAG,EAAE,KAAK;UACV,KAAK,mCAAoB;UACzB,OAAK,aAAE,UAAK,eAAe,IAAI;;UAEhCE;YAAM,KAAK,kBAAC,aAAoB,yBAAoB;;YAClDA,0BAAAC,8BAAyB,IAAI,CAAC,SAAI,CAAC,KAAK;aAC5B,aAAQ,CAAC,IAAI;8BAAzBH,2BAAAI,8BACK,IAAI,CAAC,SAAI,CAAC,KAAK,KAAK,aAAQ,CAAC;;;WAGxB,aAAQ;4BAApBJ,2BAAAO;;kCAEEP,8CAAkC,IAAI,CAAC,IAAI,GAA7B,IAAI,EAAE,SAAS;uCAA7BA,6BAA8C,GAAG,EAAE,SAAS;oDACvD,IAAI,CAAC,SAAQ,GAAC;oBAAAQ,YAAU;oBAAAN,gBAC1B,4BADkC,IAAI,CAAC;oBACvCO;;;;;;;OAIG,SAAI,CAAC;wBAAfT,yBAAA,6BACK,aAAQ,CAAC;;;;YAvBL,oBAAe;;;;;;;ACgE9B,SAAS,UAAU,CAAC,MAAM,EAAE;EAC1B,OAAO,CAAC,UAAU,KAAK,CAAC,MAAM,CAAC;AACjC;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;EACxB,OAAO,QAAQ,MAAM;AACvB;;AAEA;AACA,aAAe,eAAe,CAAC;EAC7B,UAAU,EAAE,cAAEU,QAAU,qBAAEC,UAAmB;EAC7C,KAAK,EAAE,QAAQ,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;EAC/D,KAAK,EAAE,CAAC,sBAAsB,CAAC;EAC/B,KAAK,CAAC,MAAM,EAAE;IACZ,SAAS,MAAM,CAAC,MAAM,CAAC;IACvB,MAAM,YAAY,GAAG,CAAC,EAAE,CAAC;IACzB,MAAM,QAAQ,QAAQ,CAAC;MACrB,IAAI,EAAE;QACJ,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK;QAC5B,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK;OAC7B;MACD,uBAAuB,EAAE,MAAM,CAAC,aAAa,CAAC,KAAK;MACnD,SAAS,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;MAC9C,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC5C,mBAAmB,EAAE,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC;MAClE,eAAe,EAAE,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC;MAC1D,oBAAoB,EAAE,MAAM,CAAC,oBAAoB,CAAC,KAAK;MACvD,eAAe,EAAE,KAAK;MACtB,YAAY,EAAE,IAAI;MAClB,UAAU,EAAE,EAAE;MACd,YAAY,EAAE,IAAI,GAAG,EAAE;MACvB,UAAU,EAAE,EAAE;MACd,gBAAgB,EAAE,EAAE;KACrB,CAAC;IACF,WAAW;MACT,YAAY;QACV,KAAK,CAAC,eAAe,MAAM,QAAQ;UACjC,MAAM,CAAC,OAAO,CAAC,KAAK;UACpB,MAAM,CAAC,QAAQ,CAAC,KAAK;UACrB,MAAM,CAAC;SACR;QACD,KAAK,CAAC,eAAe,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;UACpD,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG;SACxC,CAAC;QACF,KAAK,CAAC,eAAe,IAAI,GAAG,EAAE;OAC/B;MACD,EAAE,SAAS,EAAE;KACd;IACD,WAAW,CAAC,MAAM;MAChB,MAAM,OAAO,KAAK,CAAC,gBAAgB,EAAE;MACrC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACnE,CAAC;IACF,SAAS,kBAAkB,CAAC,IAAI,EAAE;MAChC,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,IAAI;MAC3B,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;UACrB,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;UAC5B,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;;;;IAIhD,SAAS,aAAa,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;MACxC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,QAAQ;MAC5C,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,QAAQ,CAAC;;IAEpE,SAAS,uBAAuB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;MAClD,MAAM,WAAW,aAAa,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;MACjD,MAAM,kBAAkB,KAAK,CAAC,UAAU,CAAC,SAAS,KAAK;MACvD,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,CAAC;MACzD,OAAO,QAAQ;;IAEjB,SAAS,iBAAiB,CAAC,IAAI,EAAE;MAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK;UAC9B,QAAQ;SACT,WAAW;SACX,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;;IAE7C,SAAS,eAAe,CAAC,IAAI,EAAE;MAC7B,OAAO,IAAI,CAAC;SACT,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;SACrB,IAAI,CAAC,GAAG;SACR,WAAW;SACX,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;;IAE/C,MAAM,WAAW,QAAQ,CAAC,MAAM;MAC9B,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,yBAAyB;KAC1E,CAAC;IACF,MAAM,oBAAoB,QAAQ,CAAC,MAAM;MACvC,OAAO,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC;KACnC,CAAC;IACF,SAAS,UAAU,CAAC,IAAI,EAAE;MACxB,KAAK,CAAC,mBAAmB,EAAE;MAC3B,KAAK,CAAC,aAAa;QACjB,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1D,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;UACrC,OAAO,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3C,CAAC;OACH;MACD,KAAK,CAAC,eAAe,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;MAC/C,iBAAiB,EAAE;;IAErB,SAAS,OAAO,CAAC,IAAI,EAAE;MACrB,MAAM,OAAO,EAAE;MACf,IAAI,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO;MAC/C,OAAO,MAAM,CAAC,EAAE,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACjB,MAAM,MAAM,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,MAAM,CAAC,EAAE,CAAC;QAClE,SAAS,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO;;MAEjD,OAAO,IAAI,CAAC,OAAO,EAAE;;IAEvB,SAAS,wBAAwB,GAAG;MAClC,IAAI,CAAC,iBAAiB,CAAC,SAAS,KAAK,CAAC,eAAe,EAAE;QACrD;;MAEF,iBAAiB,EAAE;;IAErB,SAAS,iBAAiB,GAAG;MAC3B,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,eAAe;;IAEhD,MAAM,cAAc,QAAQ,CAAC,MAAM;MACjC,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAClC,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,eAAe,CAAC;;MAEnD,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,CAAC;KACpD,CAAC;IACF,OAAO;MACL,iBAAiB;MACjB,KAAK;MACL,SAAS;MACT,kBAAkB;MAClB,uBAAuB;MACvB,WAAW;MACX,QAAQ;MACR,UAAU;MACV,iBAAiB;MACjB,wBAAwB;KACzB;GACF;AACH,CAAC,CAAC;;qBCzMS,EAAE,EAAC,SAAS;;gDAcd,yCAAuC;gCAAAT,4BAAI,IAAE;iEAC9C;gCAAAA,gBAAU,YAAN,GAAC;gDAAK,eAAa;;;EADiB;;EACxC,UAAU;;;qBAcT,EAAE,EAAC,MAAM;;;;;;uBA7BhBF,8BAAA;IACEE;MACE,KAAK,EAAC;MACL,YAAU,uCAAE,UAAK,CAAC,kBAAkB,sBAAiB;;qBAEtDA;qEACW,UAAK,CAAC,UAAU;QACzB,IAAI,EAAC;QACL,WAAW,EAAC;QACZ,KAAK,EAAC;QACL,OAAK,0CAAE,uEAAwB;QAC/B,OAAK,0CAAE,uEAAwB;;qBALvB,UAAK,CAAC,UAAU;;OAOd,UAAK,CAAC,mBAAmB;wBAAtCF;;MAIAY;QACG,kBAAgB,EAAE,UAAK,CAAC,eAAe;QACvC,WAAS,EAAE,UAAK,CAAC,QAAQ;QACzB,cAAY,EAAE,UAAK,CAAC,UAAU;QAC9B,IAAI,EAAE,gBAAW;QACjB,IAAI,EAAE,UAAK,CAAC,IAAI;QAChB,WAAS,EAAE,aAAQ;QACnB,mBAAiB,EAAE,UAAK,CAAC,eAAe;QACxC,wBAAsB,EAAE,UAAK,CAAC,oBAAoB;QAClD,YAAU,EAAE,eAAU;;;IAG3BV,uBAAA;wBACEF,8CAC4B,UAAK,CAAC,UAAU,CAAC,MAAM;;YAAzC,MAAM,EAAE,KAAK;6BADvBK;UAIG,GAAG,EAAE,KAAK;UACV,KAAK,EAAE,MAAM;UACb,KAAK,EAAE,KAAK;UACZ,eAAa,EAAE,UAAK,CAAC,YAAY;UACjC,IAAI,EAAE,UAAK,CAAC,IAAI;UAChB,kBAAgB,EAAE,UAAK,CAAC,gBAAgB,CAAC,KAAK;UAC9C,WAAS,EAAE,aAAQ;UACnB,mBAAiB,EAAE,UAAK,CAAC,eAAe;UACxC,wBAAsB,EAAE,UAAK,CAAC,oBAAoB;UAClD,WAAS,EAAE,4BAAuB;UAClC,gBAAc,EAAE,uBAAkB;;;;;;;;;;ACxC5B,MAAM,UAAU,SAAS,MAAM,CAAC;AAC/C,EAAE,MAAM,MAAM,GAAG;AACjB,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACzD;AACA,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe;AACzC,MAAM,oCAAoC,CAAC;AAC3C;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;AACzB,IAAI,IAAI,CAAC,IAAI,GAAG,SAAS,CAACQ,MAAG,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACzD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,GAAG;AACH;;;;;;;;;;;;;"}