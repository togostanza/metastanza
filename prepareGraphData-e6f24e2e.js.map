{"version":3,"file":"prepareGraphData-e6f24e2e.js","sources":["../../../home/runner/work/metastanza/metastanza/node_modules/uuid/dist/esm-browser/rng.js","../../../home/runner/work/metastanza/metastanza/node_modules/uuid/dist/esm-browser/regex.js","../../../home/runner/work/metastanza/metastanza/node_modules/uuid/dist/esm-browser/validate.js","../../../home/runner/work/metastanza/metastanza/node_modules/uuid/dist/esm-browser/stringify.js","../../../home/runner/work/metastanza/metastanza/node_modules/uuid/dist/esm-browser/v4.js","../../../home/runner/work/metastanza/metastanza/lib/prepareGraphData.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import * as d3 from \"d3\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst edgeSym = Symbol(\"nodeAdjEdges\");\nconst groupSym = Symbol(\"nodeGroup\");\nconst edgeWidthSym = Symbol(\"edgeWidth\");\nconst sourceNodeSym = Symbol(\"sourceNode\");\nconst targetNodeSym = Symbol(\"targetNode\");\nconst nodeSizeSym = Symbol(\"nodeSize\");\nconst nodeColorSym = Symbol(\"nodeColor\");\nconst nodeLabelSym = Symbol(\"nodeLabel\");\nconst nodeBorderColorSym = Symbol(\"nodeBorderColor\");\nconst edgeColorSym = Symbol(\"edgeColor\");\nconst idSym = Symbol(\"id\");\n\nconst symbols = {\n  edgeSym,\n  edgeWidthSym,\n  sourceNodeSym,\n  targetNodeSym,\n  nodeSizeSym,\n  nodeColorSym,\n  groupSym,\n  edgeColorSym,\n  nodeLabelSym,\n  idSym,\n  nodeBorderColorSym,\n};\n\nexport default function (nodesC, edgesC, params) {\n  nodesC = JSON.parse(JSON.stringify(nodesC));\n  edgesC = JSON.parse(JSON.stringify(edgesC));\n\n  const {\n    color,\n    nodeSizeParams,\n    nodeColorParams,\n    edgeWidthParams,\n    edgeColorParams,\n    nodesSortParams,\n  } = params;\n\n  if (\n    nodesSortParams &&\n    nodesC.every((node) => node[nodesSortParams.sortBy] !== undefined)\n  ) {\n    nodesC.sort((a, b) => {\n      if (a[nodesSortParams.sortBy] > b[nodesSortParams.sortBy]) {\n        return nodesSortParams.sortOrder === \"ascending\" ? 1 : -1;\n      }\n      if (a[nodesSortParams.sortBy] < b[nodesSortParams.sortBy]) {\n        return nodesSortParams.sortOrder === \"ascending\" ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n  const nodeHash = {};\n\n  const groupHash = {};\n  nodesC.forEach((node) => {\n    const groupName = \"\" + node.group;\n    groupHash[groupName]\n      ? groupHash[groupName].push(node)\n      : (groupHash[groupName] = [node]);\n    nodeHash[node.id] = node;\n  });\n\n  // Edges width\n  let edgeWidthScale;\n  if (\n    edgeWidthParams.basedOn === \"data key\" &&\n    edgesC.some(\n      (edge) =>\n        edge[edgeWidthParams.dataKey] &&\n        edgeWidthParams.minWidth &&\n        edgeWidthParams.maxWidth\n    )\n  ) {\n    edgeWidthScale = d3\n      .scaleLinear()\n      .domain(d3.extent(edgesC, (d) => d[edgeWidthParams.dataKey]))\n      .range([edgeWidthParams.minWidth, edgeWidthParams.maxWidth]);\n  } else {\n    edgeWidthScale = () => edgeWidthParams.fixedWidth;\n  }\n\n  edgesC.forEach((edge) => {\n    edge[symbols.edgeWidthSym] = edgeWidthScale(\n      parseFloat(edge[edgeWidthParams.dataKey]) || edgeWidthParams.minWidth || 1\n    );\n    edge[symbols.sourceNodeSym] = nodeHash[edge.source];\n    edge[symbols.targetNodeSym] = nodeHash[edge.target];\n    edge[symbols.idSym] = uuidv4();\n  });\n  // ===\n\n  // Add adjacent edges to node\n  nodesC.forEach((node) => {\n    const adjEdges = edgesC.filter((edge) => {\n      return (\n        edge[symbols.sourceNodeSym] === node ||\n        edge[symbols.targetNodeSym] === node\n      );\n    });\n    node[symbols.edgeSym] = adjEdges;\n  });\n\n  // Nodes color\n  if (\n    nodeColorParams.basedOn === \"data key\" &&\n    nodesC.some((d) => d[nodeColorParams.dataKey])\n  ) {\n    const nodeColorFunc = color().domain(\n      [...new Set(nodesC.map((d) => \"\" + d[nodeColorParams.dataKey]))].sort()\n    );\n    // Match hex color\n    const regex = /^#(?:[0-9a-f]{3}){1,2}$/i;\n    nodesC.forEach((node) => {\n      // if data key value is a hex color, use it, else use color ordinal scale provided\n      if (regex.test(node[nodeColorParams.dataKey])) {\n        node[symbols.nodeColorSym] = node[nodeColorParams.dataKey];\n      } else if (typeof node[nodeColorParams.dataKey] !== \"undefined\") {\n        node[symbols.nodeColorSym] = nodeColorFunc(\n          \"\" + node[nodeColorParams.dataKey]\n        );\n      } else {\n        node[symbols.nodeColorSym] = \"black\";\n      }\n      node[symbols.nodeBorderColorSym] = d3\n        .color(node[symbols.nodeColorSym].trim())\n        .darker(3);\n    });\n  } else {\n    nodesC.forEach((node) => {\n      node[symbols.nodeColorSym] = null;\n    });\n  }\n  // ===\n\n  //Edges color\n  if (\n    edgeColorParams.basedOn === \"data key\" &&\n    edgesC.some((d) => d[edgeColorParams.dataKey])\n  ) {\n    const edgeColorFunc = color();\n    // Match hex color\n    const regex = /^#(?:[0-9a-f]{3}){1,2}$/i;\n    edgesC.forEach((edge) => {\n      // if data key value is a hex color, use it, else use color ordinal scale provided\n      if (regex.test(edge[edgeColorParams.dataKey])) {\n        edge[symbols.edgeColorSym] = edge[edgeColorParams.dataKey];\n      } else if (edge[edgeColorParams.dataKey]) {\n        edge[symbols.edgeColorSym] = edgeColorFunc(\n          edge[edgeColorParams.dataKey]\n        );\n      } else {\n        edge[symbols.edgeColorSym] = null;\n      }\n    });\n  } else if (edgeColorParams.basedOn.match(/source|target/i)) {\n    const wichColor = edgeColorParams.basedOn.match(/source|target/i)[0];\n    edgesC.forEach((edge) => {\n      edge[symbols.edgeColorSym] =\n        edge[symbols[`${wichColor}NodeSym`]][symbols.nodeColorSym];\n    });\n  } else {\n    edgesC.forEach((edge) => {\n      edge[symbols.edgeColorSym] = null;\n    });\n  }\n\n  // ===\n\n  // Nodes size\n  let nodeSizeScale;\n  if (\n    nodeSizeParams.basedOn === \"data key\" &&\n    nodesC.some((d) => d[nodeSizeParams.dataKey]) &&\n    nodeSizeParams.minSize &&\n    nodeSizeParams.maxSize\n  ) {\n    nodeSizeScale = d3\n      .scaleLinear()\n      .domain(d3.extent(nodesC, (d) => d[nodeSizeParams.dataKey]))\n      .range([nodeSizeParams.minSize, nodeSizeParams.maxSize]);\n    nodesC.forEach((node) => {\n      node[symbols.nodeSizeSym] = nodeSizeScale(node[nodeSizeParams.dataKey]);\n    });\n  } else {\n    nodesC.forEach((node) => {\n      node[symbols.nodeSizeSym] = nodeSizeParams.fixedSize || 4;\n    });\n  }\n\n  return { prepNodes: nodesC, prepEdges: edgesC, nodeHash, groupHash, symbols };\n  // ===\n}\n\nexport const get3DEdges = (edgesC) => {\n  return edgesC.map((edge) => {\n    const toPush = [\n      [\n        edge[symbols.sourceNodeSym].x,\n        edge[symbols.sourceNodeSym].y,\n        edge[symbols.sourceNodeSym].z,\n      ],\n      [\n        edge[symbols.targetNodeSym].x,\n        edge[symbols.targetNodeSym].y,\n        edge[symbols.targetNodeSym].z,\n      ],\n    ];\n\n    toPush.edge = edge;\n    return toPush;\n  });\n};\n\n/**\n * Returns group planes objects\n * @param {Object} groupHash - groups hash table. {[groupId]: [{node1}, {node2}, ...]}\n * @param {Object} planeParams - plane params. {WIDTH, HEIGHT, DEPTH, color}\n * @returns {Array} group planes objects array\n */\nexport const getGroupPlanes = (groupHash, planeParams) => {\n  const groupIds = Object.keys(groupHash);\n  const { WIDTH, groupPlaneColorParams } = planeParams;\n  const groupColor = planeParams.color().domain(groupIds.sort());\n\n  function getGroupPlane(group) {\n    const y = planeParams.yPointScale(group);\n    const LU = [-WIDTH / 2, y, -WIDTH / 2];\n    const LD = [-WIDTH / 2, y, WIDTH / 2];\n    const RD = [WIDTH / 2, y, WIDTH / 2];\n    const RU = [WIDTH / 2, y, -WIDTH / 2];\n    const groupPlane = [LU, LD, RD, RU];\n    groupPlane.group = groupHash[group];\n    groupPlane.groupId = group;\n\n    groupPlane.color =\n      groupPlaneColorParams.basedOn === \"fixed\" ? null : groupColor(group);\n\n    return groupPlane;\n  }\n\n  return groupIds.map(getGroupPlane);\n};\n"],"names":["color","d3\n      .scaleLinear","d3.extent","uuidv4","d3\n        .color"],"mappings":"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"}