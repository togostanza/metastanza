{"version":3,"file":"scroll-table.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/LineClampCell.vue","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/LineClampCell.vue?vue&type=template&id=93c706b2&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/AnchorCell.vue","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/AnchorCell.vue?vue&type=template&id=bae019ae&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/app.vue","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/app.vue?vue&type=template&id=6260173f&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/index.js"],"sourcesContent":["<!-- eslint-disable vue/no-v-html -->\n<template>\n  <input :id=\"id\" type=\"checkbox\" :name=\"id\" />\n  <label\n    v-if=\"unescape\"\n    :for=\"id\"\n    :style=\"`-webkit-line-clamp: ${lineClamp}`\"\n    v-html=\"value\"\n  ></label>\n  <label v-else :for=\"id\" :style=\"`-webkit-line-clamp: ${lineClamp}`\">\n    {{ value }}\n  </label>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    id: {\n      type: String,\n      default: null,\n    },\n    unescape: {\n      type: Boolean,\n      default: false,\n    },\n    lineClamp: {\n      type: Number,\n      default: null,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n  },\n});\n</script>\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <input :id=\"id\" type=\"checkbox\" :name=\"id\" />\n  <label\n    v-if=\"unescape\"\n    :for=\"id\"\n    :style=\"`-webkit-line-clamp: ${lineClamp}`\"\n    v-html=\"value\"\n  ></label>\n  <label v-else :for=\"id\" :style=\"`-webkit-line-clamp: ${lineClamp}`\">\n    {{ value }}\n  </label>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    id: {\n      type: String,\n      default: null,\n    },\n    unescape: {\n      type: Boolean,\n      default: false,\n    },\n    lineClamp: {\n      type: Number,\n      default: null,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n  },\n});\n</script>\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <a v-if=\"unescape && lineClamp\" :href=\"href\" :target=\"target\">\n    <LineClampCell\n      :id=\"id\"\n      :line-clamp=\"lineClamp\"\n      :unescape=\"unescape\"\n      :value=\"value\"\n    />\n  </a>\n  <!-- eslint-disable-next-line vue/no-v-html -->\n  <a v-if=\"unescape && !lineClamp\" :href=\"href\" :target=\"target\" v-html=\"value\">\n  </a>\n  <a v-else :href=\"href\" :target=\"target\">\n    <template v-if=\"lineClamp\">\n      <LineClampCell :id=\"id\" :line-clamp=\"lineClamp\" :value=\"value\" />\n    </template>\n    <template v-else>\n      {{ value }}\n    </template>\n  </a>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport LineClampCell from \"./LineClampCell.vue\";\n\nexport default defineComponent({\n  components: {\n    LineClampCell,\n  },\n  props: {\n    id: {\n      type: String,\n      default: null,\n    },\n    href: {\n      type: String,\n      default: null,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    target: {\n      type: String,\n      default: \"_blank\",\n    },\n    unescape: {\n      type: Boolean,\n      default: false,\n    },\n    lineClamp: {\n      type: Number,\n      default: null,\n    },\n  },\n});\n</script>\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <a v-if=\"unescape && lineClamp\" :href=\"href\" :target=\"target\">\n    <LineClampCell\n      :id=\"id\"\n      :line-clamp=\"lineClamp\"\n      :unescape=\"unescape\"\n      :value=\"value\"\n    />\n  </a>\n  <!-- eslint-disable-next-line vue/no-v-html -->\n  <a v-if=\"unescape && !lineClamp\" :href=\"href\" :target=\"target\" v-html=\"value\">\n  </a>\n  <a v-else :href=\"href\" :target=\"target\">\n    <template v-if=\"lineClamp\">\n      <LineClampCell :id=\"id\" :line-clamp=\"lineClamp\" :value=\"value\" />\n    </template>\n    <template v-else>\n      {{ value }}\n    </template>\n  </a>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport LineClampCell from \"./LineClampCell.vue\";\n\nexport default defineComponent({\n  components: {\n    LineClampCell,\n  },\n  props: {\n    id: {\n      type: String,\n      default: null,\n    },\n    href: {\n      type: String,\n      default: null,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    target: {\n      type: String,\n      default: \"_blank\",\n    },\n    unescape: {\n      type: Boolean,\n      default: false,\n    },\n    lineClamp: {\n      type: Number,\n      default: null,\n    },\n  },\n});\n</script>\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <div\n    class=\"tableWrapper\"\n    :style=\"`width: ${width}px; height: ${height}px;`\"\n    @scroll=\"handleScroll\"\n  >\n    <table v-if=\"state.allRows\">\n      <thead ref=\"thead\">\n        <tr>\n          <th\n            v-for=\"(column, index) in state.columns\"\n            :id=\"column.id\"\n            :key=\"column.id\"\n            :class=\"{ fixed: column.fixed }\"\n            :style=\"\n              column.fixed\n                ? `left: ${index === 0 ? 0 : state.thListWidth[index - 1]}px;`\n                : null\n            \"\n          >\n            {{ column.label }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, row_index) in state.allRows\" :key=\"row.id\">\n          <td\n            v-for=\"(cell, index) in row\"\n            :key=\"cell.column.id\"\n            :class=\"[\n              cell.column.align,\n              { fixed: cell.column.fixed },\n              cell.column.class,\n            ]\"\n            :style=\"\n              cell.column.fixed\n                ? `left: ${index === 0 ? 0 : state.thListWidth[index - 1]}px;`\n                : null\n            \"\n          >\n            <span v-if=\"cell.href\">\n              <AnchorCell\n                :id=\"`${cell.column.id}_${row_index}`\"\n                :href=\"cell.href\"\n                :value=\"cell.value\"\n                :target=\"cell.target ? `_${cell.target}` : '_blank'\"\n                :unescape=\"cell.unescape\"\n                :line-clamp=\"cell.lineClamp\"\n              />\n            </span>\n            <span v-else-if=\"cell.lineClamp\">\n              <LineClampCell\n                :id=\"`${cell.column.id}_${row_index}`\"\n                :value=\"cell.value\"\n                :unescape=\"cell.unescape\"\n                :line-clamp=\"cell.lineClamp\"\n              />\n            </span>\n            <!-- eslint-disable-next-line vue/no-v-html -->\n            <span v-else-if=\"cell.unescape\" v-html=\"cell.value\"></span>\n            <span v-else>{{ cell.value }}</span>\n          </td>\n        </tr>\n        <tr v-if=\"state.isFetching\">\n          <td :colspan=\"state.columns.length\" class=\"loadingWrapper\">\n            <div class=\"dotTyping\"></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  reactive,\n  onMounted,\n  onRenderTriggered,\n  ref,\n} from \"vue\";\nimport AnchorCell from \"./AnchorCell.vue\";\nimport LineClampCell from \"./LineClampCell.vue\";\n\nimport loadData from \"togostanza-utils/load-data\";\n\nimport metadata from \"./metadata.json\";\n\nexport default defineComponent({\n  components: {\n    AnchorCell,\n    LineClampCell,\n  },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  setup(params) {\n    const state = reactive({\n      columns: [],\n      allRows: [],\n      main: null,\n      offset: 0,\n\n      isFetching: false,\n\n      thListWidth: [],\n    });\n\n    async function fetchData() {\n      state.isFetching = true;\n      let urlParams = {\n        limit: params.pageSize,\n        offset: state.offset,\n      };\n      urlParams = new URLSearchParams(urlParams);\n      const { dataUrl } = params;\n      const connectCharacter = new URL(dataUrl) ? \"&\" : \"?\";\n\n      const data = await loadData(\n        `${dataUrl}${connectCharacter}${urlParams}`,\n        params.dataType,\n        params.main\n      );\n\n      if (params.columns) {\n        state.columns = JSON.parse(params.columns).map((column, index) => {\n          column.fixed = index < params.fixedColumns;\n          return column;\n        });\n      } else if (data.length > 0) {\n        const firstRow = data[0];\n        state.columns = Object.keys(firstRow).map((key, index) => {\n          return {\n            id: key,\n            label: key,\n            fixed: index < params.fixedColumns,\n          };\n        });\n      } else {\n        state.columns = [];\n      }\n\n      state.allRows = state.allRows.concat(\n        data.map((row) => {\n          return state.columns.map((column) => {\n            return {\n              column,\n              value: row[column.id],\n              href: column.link ? row[column.link] : null,\n              unescape: column.escape === false,\n              align: column.align,\n              class: column.class,\n              target: column.target,\n              lineClamp: column[\"line-clamp\"],\n            };\n          });\n        })\n      );\n      state.isFetching = false;\n    }\n\n    function handleScroll(e) {\n      if (\n        e.path[0].scrollTop ===\n          e.path[0].firstChild.clientHeight - e.path[0].clientHeight &&\n        !state.isFetching\n      ) {\n        state.offset = state.offset + params.pageSize;\n        fetchData();\n      }\n    }\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    const thead = ref(null);\n    onRenderTriggered(() => {\n      setTimeout(() => {\n        const thList = thead.value.children[0].children;\n        state.thListWidth = Array.from(thList).map((th) => th.clientWidth);\n      }, 0);\n    });\n\n    return {\n      state,\n      handleScroll,\n      width: params.width,\n      height: params.height,\n      padding: params.padding,\n      thead,\n    };\n  },\n});\n</script>\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <div\n    class=\"tableWrapper\"\n    :style=\"`width: ${width}px; height: ${height}px;`\"\n    @scroll=\"handleScroll\"\n  >\n    <table v-if=\"state.allRows\">\n      <thead ref=\"thead\">\n        <tr>\n          <th\n            v-for=\"(column, index) in state.columns\"\n            :id=\"column.id\"\n            :key=\"column.id\"\n            :class=\"{ fixed: column.fixed }\"\n            :style=\"\n              column.fixed\n                ? `left: ${index === 0 ? 0 : state.thListWidth[index - 1]}px;`\n                : null\n            \"\n          >\n            {{ column.label }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, row_index) in state.allRows\" :key=\"row.id\">\n          <td\n            v-for=\"(cell, index) in row\"\n            :key=\"cell.column.id\"\n            :class=\"[\n              cell.column.align,\n              { fixed: cell.column.fixed },\n              cell.column.class,\n            ]\"\n            :style=\"\n              cell.column.fixed\n                ? `left: ${index === 0 ? 0 : state.thListWidth[index - 1]}px;`\n                : null\n            \"\n          >\n            <span v-if=\"cell.href\">\n              <AnchorCell\n                :id=\"`${cell.column.id}_${row_index}`\"\n                :href=\"cell.href\"\n                :value=\"cell.value\"\n                :target=\"cell.target ? `_${cell.target}` : '_blank'\"\n                :unescape=\"cell.unescape\"\n                :line-clamp=\"cell.lineClamp\"\n              />\n            </span>\n            <span v-else-if=\"cell.lineClamp\">\n              <LineClampCell\n                :id=\"`${cell.column.id}_${row_index}`\"\n                :value=\"cell.value\"\n                :unescape=\"cell.unescape\"\n                :line-clamp=\"cell.lineClamp\"\n              />\n            </span>\n            <!-- eslint-disable-next-line vue/no-v-html -->\n            <span v-else-if=\"cell.unescape\" v-html=\"cell.value\"></span>\n            <span v-else>{{ cell.value }}</span>\n          </td>\n        </tr>\n        <tr v-if=\"state.isFetching\">\n          <td :colspan=\"state.columns.length\" class=\"loadingWrapper\">\n            <div class=\"dotTyping\"></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  reactive,\n  onMounted,\n  onRenderTriggered,\n  ref,\n} from \"vue\";\nimport AnchorCell from \"./AnchorCell.vue\";\nimport LineClampCell from \"./LineClampCell.vue\";\n\nimport loadData from \"togostanza-utils/load-data\";\n\nimport metadata from \"./metadata.json\";\n\nexport default defineComponent({\n  components: {\n    AnchorCell,\n    LineClampCell,\n  },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  setup(params) {\n    const state = reactive({\n      columns: [],\n      allRows: [],\n      main: null,\n      offset: 0,\n\n      isFetching: false,\n\n      thListWidth: [],\n    });\n\n    async function fetchData() {\n      state.isFetching = true;\n      let urlParams = {\n        limit: params.pageSize,\n        offset: state.offset,\n      };\n      urlParams = new URLSearchParams(urlParams);\n      const { dataUrl } = params;\n      const connectCharacter = new URL(dataUrl) ? \"&\" : \"?\";\n\n      const data = await loadData(\n        `${dataUrl}${connectCharacter}${urlParams}`,\n        params.dataType,\n        params.main\n      );\n\n      if (params.columns) {\n        state.columns = JSON.parse(params.columns).map((column, index) => {\n          column.fixed = index < params.fixedColumns;\n          return column;\n        });\n      } else if (data.length > 0) {\n        const firstRow = data[0];\n        state.columns = Object.keys(firstRow).map((key, index) => {\n          return {\n            id: key,\n            label: key,\n            fixed: index < params.fixedColumns,\n          };\n        });\n      } else {\n        state.columns = [];\n      }\n\n      state.allRows = state.allRows.concat(\n        data.map((row) => {\n          return state.columns.map((column) => {\n            return {\n              column,\n              value: row[column.id],\n              href: column.link ? row[column.link] : null,\n              unescape: column.escape === false,\n              align: column.align,\n              class: column.class,\n              target: column.target,\n              lineClamp: column[\"line-clamp\"],\n            };\n          });\n        })\n      );\n      state.isFetching = false;\n    }\n\n    function handleScroll(e) {\n      if (\n        e.path[0].scrollTop ===\n          e.path[0].firstChild.clientHeight - e.path[0].clientHeight &&\n        !state.isFetching\n      ) {\n        state.offset = state.offset + params.pageSize;\n        fetchData();\n      }\n    }\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    const thead = ref(null);\n    onRenderTriggered(() => {\n      setTimeout(() => {\n        const thList = thead.value.children[0].children;\n        state.thListWidth = Array.from(thList).map((th) => th.clientWidth);\n      }, 0);\n    });\n\n    return {\n      state,\n      handleScroll,\n      width: params.width,\n      height: params.height,\n      padding: params.padding,\n      thead,\n    };\n  },\n});\n</script>\n","import Stanza from \"togostanza/stanza\";\n\nimport {\n  copyHTMLSnippetToClipboardMenuItem,\n  appendCustomCss,\n} from \"togostanza-utils\";\n\nimport { createApp } from \"vue\";\nimport App from \"./app.vue\";\n\nexport default class ScrollTable extends Stanza {\n  menu() {\n    return [copyHTMLSnippetToClipboardMenuItem(this)];\n  }\n\n  async render() {\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const main = this.root.querySelector(\"main\");\n    main.parentNode.style.backgroundColor =\n      \"var(--togostanza-background-color)\";\n    main.parentNode.style.padding = this.params[\"padding\"];\n\n    this._app?.unmount();\n    this._app = createApp(App, { ...this.params, main });\n    this._app.mount(main);\n  }\n}\n"],"names":["_createElementVNode","LineClampCell","_createCommentVNode","_createElementBlock","_createBlock","AnchorCell","_Fragment","App"],"mappings":";;;;;;AAiBA,eAAe,eAAe,CAAC;EAC7B,KAAK,EAAE;IACL,EAAE,EAAE;MACF,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;IACD,QAAQ,EAAE;MACR,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;MACT,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;IACD,KAAK,EAAE;MACL,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;GACF;AACH,CAAC,CAAC;;;;;;;;ICjCAA;;;;;KAEQ;yCAIC;;UAHN,GAAG,EAAE,OAAE;UACP,KAAK;UACN;;;;;;2BAGG;;;;;;;ACgBP,eAAe,eAAe,CAAC;EAC7B,UAAU,EAAE;mBACVC,QAAa;GACd;EACD,KAAK,EAAE;IACL,EAAE,EAAE;MACF,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;IACD,IAAI,EAAE;MACJ,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;IACD,KAAK,EAAE;MACL,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;IACD,MAAM,EAAE;MACN,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,QAAQ;KAClB;IACD,QAAQ,EAAE;MACR,IAAI,EAAE,OAAO;MACb,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;MACT,IAAI,EAAE,MAAM;MACZ,OAAO,EAAE,IAAI;KACd;GACF;AACH,CAAC,CAAC;;;;;;;;;;KCtDS;;;;;;;YAEJ,EAAE,EAAE,OAAE;YACN,YAAU,EAAE;YACZ,QAAQ,EAAE;;;;;IAIfC,8DAA+C;;sBAC/CC,mBACI;;;;;;;;cACW,EAAE,SAAI;UAAG;;;4BAEpBC;;;;;;;gDAGG,UAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsEd,aAAe,eAAe,CAAC;EAC7B,UAAU,EAAE;gBACVC,QAAU;mBACVJ,QAAa;GACd;EACD,KAAK,EAAE,QAAQ,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;EAC/D,KAAK,CAAC,MAAM,EAAE;IACZ,MAAM,QAAQ,QAAQ,CAAC;MACrB,OAAO,EAAE,EAAE;MACX,OAAO,EAAE,EAAE;MACX,IAAI,EAAE,IAAI;MACV,MAAM,EAAE,CAAC;;MAET,UAAU,EAAE,KAAK;;MAEjB,WAAW,EAAE,EAAE;KAChB,CAAC;;IAEF,eAAe,SAAS,GAAG;MACzB,KAAK,CAAC,aAAa,IAAI;MACvB,IAAI,YAAY;QACd,KAAK,EAAE,MAAM,CAAC,QAAQ;QACtB,MAAM,EAAE,KAAK,CAAC,MAAM;OACrB;MACD,YAAY,IAAI,eAAe,CAAC,SAAS,CAAC;MAC1C,MAAM,EAAE,YAAY,MAAM;MAC1B,MAAM,mBAAmB,IAAI,GAAG,CAAC,OAAO,IAAI,MAAM,GAAG;;MAErD,MAAM,OAAO,MAAM,QAAQ;QACzB,CAAC,EAAE,OAAO,CAAC,EAAE,gBAAgB,CAAC,EAAE,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ;QACf,MAAM,CAAC;OACR;;MAED,IAAI,MAAM,CAAC,OAAO,EAAE;QAClB,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,KAAK;UAChE,MAAM,CAAC,QAAQ,QAAQ,MAAM,CAAC,YAAY;UAC1C,OAAO,MAAM;SACd,CAAC;aACG,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;QAC1B,MAAM,WAAW,IAAI,CAAC,CAAC,CAAC;QACxB,KAAK,CAAC,UAAU,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK;UACxD,OAAO;YACL,EAAE,EAAE,GAAG;YACP,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,QAAQ,MAAM,CAAC,YAAY;WACnC;SACF,CAAC;aACG;QACL,KAAK,CAAC,UAAU,EAAE;;;MAGpB,KAAK,CAAC,UAAU,KAAK,CAAC,OAAO,CAAC,MAAM;QAClC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;UAChB,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;YACnC,OAAO;cACL,MAAM;cACN,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;cACrB,IAAI,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI;cAC3C,QAAQ,EAAE,MAAM,CAAC,WAAW,KAAK;cACjC,KAAK,EAAE,MAAM,CAAC,KAAK;cACnB,KAAK,EAAE,MAAM,CAAC,KAAK;cACnB,MAAM,EAAE,MAAM,CAAC,MAAM;cACrB,SAAS,EAAE,MAAM,CAAC,YAAY,CAAC;aAChC;WACF,CAAC;SACH;OACF;MACD,KAAK,CAAC,aAAa,KAAK;;;IAG1B,SAAS,YAAY,CAAC,CAAC,EAAE;MACvB;QACE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACR,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,KAAK,CAAC;QACP;QACA,KAAK,CAAC,SAAS,KAAK,CAAC,SAAS,MAAM,CAAC,QAAQ;QAC7C,SAAS,EAAE;;;;IAIf,SAAS,CAAC,MAAM;MACd,SAAS,EAAE;KACZ,CAAC;;IAEF,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC;IACvB,iBAAiB,CAAC,MAAM;MACtB,UAAU,CAAC,MAAM;QACf,MAAM,SAAS,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;QAC/C,KAAK,CAAC,cAAc,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC;OACnE,EAAE,CAAC,CAAC;KACN,CAAC;;IAEF,OAAO;MACL,KAAK;MACL,YAAY;MACZ,KAAK,EAAE,MAAM,CAAC,KAAK;MACnB,MAAM,EAAE,MAAM,CAAC,MAAM;MACrB,OAAO,EAAE,MAAM,CAAC,OAAO;MACvB,KAAK;KACN;GACF;AACH,CAAC,CAAC;;;;;;;;;;;iCC7HUD;;EAAA;;;;;;;;IA/DR,KAAK,EAAC,cAAc;IACnB,KAAK,2BAAY;;;KAGL,UAAK,CAAC;;;4BAgBV;mGAZO,MAAM;;kBACb,EAAE,EAAE,MAAM,CAAC,EAAE;kBACb,GAAG,EAAE,MAAM,CAAC,EAAE;kBACd,KAAK;uBACA;;;;;;;;;;iDAgDLM;sDAAA;;;sFAnCO,IAAI,EAAE,KAAK;;oBAClB,GAAG,EAAE;yBACA;;;;;yBAKA;;;;;;qBAMM;yDASL;sCADH;4BANC,EAAE,KAAK,IAAI,CAAC;4BACZ,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,KAAK,EAAE,IAAI,CAAC,KAAK;4BACjB,MAAM,EAAE,IAAI,CAAC,MAAM;4BACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;;;;;2DAWrB;wCADH;8BAJC,EAAE,KAAK,IAAI,CAAC;8BACZ,KAAK,EAAE,IAAI,CAAC,KAAK;8BACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;;;;2BAKX,IAAI,CAAC,QAAQ;0CAA9BH;8BADAD,8DAA+C;8BAC/CF;gCAAgC;;;0CAChCG;;;;;aAGM,UAAK,CAAC,UAAU;iDAIrB;;oBAHE,OAAO,EAAE,UAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;;ACxDvB,MAAM,WAAW,SAAS,MAAM,CAAC;AAChD,EAAE,IAAI,GAAG;AACT,IAAI,OAAO,CAAC,kCAAkC,CAAC,IAAI,CAAC,CAAC,CAAC;AACtD,GAAG;AACH;AACA,EAAE,MAAM,MAAM,GAAG;AACjB,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACzD;AACA,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe;AACzC,MAAM,oCAAoC,CAAC;AAC3C,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC3D;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;AACzB,IAAI,IAAI,CAAC,IAAI,GAAG,SAAS,CAACI,MAAG,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACzD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,GAAG;AACH;;;;;;;;;;;;;"}