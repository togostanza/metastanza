{"version":3,"file":"scroll-table.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/app.vue","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/app.vue?vue&type=template&id=6260173f&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/scroll-table/index.js"],"sourcesContent":["<template>\n  <div\n    class=\"tableWrapper\"\n    :style=\"`height: ${height}px;`\"\n    @scroll=\"handleScroll\"\n  >\n    <table v-if=\"state.allRows\">\n      <thead>\n        <tr>\n          <th v-for=\"column in state.columns\" :key=\"column.id\">\n            {{ column.label }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"row in state.allRows\" :key=\"row.id\">\n          <td v-for=\"cell in row\" :key=\"cell.column.id\">\n            <span v-if=\"cell.href\">\n              <a :href=\"cell.href\" target=\"_blank\">{{ cell.value }}</a>\n            </span>\n            <span v-else-if=\"cell.unescape\" v-html=\"cell.value\"></span>\n            <span v-else>\n              {{ cell.value }}\n            </span>\n          </td>\n        </tr>\n        <tr v-if=\"state.isFetching\">\n          <td :colspan=\"state.columns.length\" class=\"loadingWrapper\">\n            <div class=\"dotTyping\"></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\n\nimport loadData from \"@/lib/load-data\";\n\nimport metadata from \"./metadata.json\";\n\nexport default defineComponent({\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n\n  setup(params) {\n    const state = reactive({\n      columns: [],\n      allRows: [],\n\n      offset: 0,\n\n      isFetching: false,\n    });\n\n    async function fetchData() {\n      state.isFetching = true;\n      let urlParams = {\n        limit: params.pageSize,\n        offset: state.offset,\n      };\n      urlParams = new URLSearchParams(urlParams);\n      const { dataUrl } = params;\n      const connectCharacter = new URL(dataUrl) ? \"&\" : \"?\";\n      const data = await loadData(\n        `${dataUrl}${connectCharacter}${urlParams}`,\n        params.dataType\n      );\n\n      if (params.columns) {\n        state.columns = JSON.parse(params.columns);\n      } else if (data.length > 0) {\n        const firstRow = data[0];\n        state.columns = Object.keys(firstRow).map((key) => {\n          return {\n            id: key,\n            label: key,\n          };\n        });\n      } else {\n        state.columns = [];\n      }\n\n      state.allRows = state.allRows.concat(\n        data.map((row) => {\n          return state.columns.map((column) => {\n            return {\n              column,\n              value: row[column.id],\n              href: column.link ? row[column.link] : null,\n              unescape: column.escape === false,\n            };\n          });\n        })\n      );\n\n      state.isFetching = false;\n    }\n\n    function handleScroll(e) {\n      if (\n        e.path[0].scrollTop ===\n          e.path[0].firstChild.clientHeight - e.path[0].clientHeight &&\n        !state.isFetching\n      ) {\n        state.offset = state.offset + params.pageSize;\n        fetchData();\n      }\n    }\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    return {\n      state,\n      handleScroll,\n      height: params.height,\n      padding: params.padding,\n    };\n  },\n});\n</script>\n","<template>\n  <div\n    class=\"tableWrapper\"\n    :style=\"`height: ${height}px;`\"\n    @scroll=\"handleScroll\"\n  >\n    <table v-if=\"state.allRows\">\n      <thead>\n        <tr>\n          <th v-for=\"column in state.columns\" :key=\"column.id\">\n            {{ column.label }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"row in state.allRows\" :key=\"row.id\">\n          <td v-for=\"cell in row\" :key=\"cell.column.id\">\n            <span v-if=\"cell.href\">\n              <a :href=\"cell.href\" target=\"_blank\">{{ cell.value }}</a>\n            </span>\n            <span v-else-if=\"cell.unescape\" v-html=\"cell.value\"></span>\n            <span v-else>\n              {{ cell.value }}\n            </span>\n          </td>\n        </tr>\n        <tr v-if=\"state.isFetching\">\n          <td :colspan=\"state.columns.length\" class=\"loadingWrapper\">\n            <div class=\"dotTyping\"></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\n\nimport loadData from \"@/lib/load-data\";\n\nimport metadata from \"./metadata.json\";\n\nexport default defineComponent({\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n\n  setup(params) {\n    const state = reactive({\n      columns: [],\n      allRows: [],\n\n      offset: 0,\n\n      isFetching: false,\n    });\n\n    async function fetchData() {\n      state.isFetching = true;\n      let urlParams = {\n        limit: params.pageSize,\n        offset: state.offset,\n      };\n      urlParams = new URLSearchParams(urlParams);\n      const { dataUrl } = params;\n      const connectCharacter = new URL(dataUrl) ? \"&\" : \"?\";\n      const data = await loadData(\n        `${dataUrl}${connectCharacter}${urlParams}`,\n        params.dataType\n      );\n\n      if (params.columns) {\n        state.columns = JSON.parse(params.columns);\n      } else if (data.length > 0) {\n        const firstRow = data[0];\n        state.columns = Object.keys(firstRow).map((key) => {\n          return {\n            id: key,\n            label: key,\n          };\n        });\n      } else {\n        state.columns = [];\n      }\n\n      state.allRows = state.allRows.concat(\n        data.map((row) => {\n          return state.columns.map((column) => {\n            return {\n              column,\n              value: row[column.id],\n              href: column.link ? row[column.link] : null,\n              unescape: column.escape === false,\n            };\n          });\n        })\n      );\n\n      state.isFetching = false;\n    }\n\n    function handleScroll(e) {\n      if (\n        e.path[0].scrollTop ===\n          e.path[0].firstChild.clientHeight - e.path[0].clientHeight &&\n        !state.isFetching\n      ) {\n        state.offset = state.offset + params.pageSize;\n        fetchData();\n      }\n    }\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    return {\n      state,\n      handleScroll,\n      height: params.height,\n      padding: params.padding,\n    };\n  },\n});\n</script>\n","import Stanza from \"togostanza/stanza\";\n\nimport { createApp } from \"vue\";\nimport App from \"./app.vue\";\n\nexport default class ScrollTable extends Stanza {\n  async render() {\n    const main = this.root.querySelector(\"main\");\n    main.parentNode.style.backgroundColor =\n      \"var(--togostanza-background-color)\";\n    main.parentNode.style.padding = this.params[\"padding\"];\n    createApp(App, this.params).mount(main);\n  }\n}\n"],"names":["_createVNode","_createBlock","App"],"mappings":"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"}