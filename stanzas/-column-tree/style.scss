// Load the repository-wide global style here. The actual file is located at ../common.scss for details.
@use "@/common.scss";

main {
  padding: 1rem 2rem;
  font-family: var(--togostanza-font-family);
  font-size: calc(var(--togostanza-font-size) * 1px);
  color: var(--togostanza-font-color);
}

#wrapper {
  position: relative;
  overflow: auto;
  width: calc(var(--togostanza-width) * 1px);
  .value {
    flex-grow: 1;
    font-weight: normal;
    font-style: italic;
    opacity: 0.8;
  }
  .label {
    display: flex;
    overflow: hidden;
    > strong,
    .value {
      word-break: break-all;
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
    }
    > strong {
      min-width: 50%;
    }
    &.-horizontal {
      width: 100%;
      line-height: 1;
      height: calc(var(--togostanza-font-size) * 1px + 1px);
      flex-direction: row;
      gap: 1rem;
      > .value {
        text-align: right;
        padding-right: 1px;
      }
    }
    &.-vertical {
      flex-direction: column;
      > .value {
        text-align: left;
      }
    }
  }
  .icon {
    width: calc(var(--togostanza-font-size) * 0.6 * 1px);
  }
  .-with-border {
    &:after {
      position: absolute;
      content: "";
      display: block;
      width: 100%;
      top: 0;
      left: 0;
      border-top: solid 1px var(--togostanza-column-border-color);
    }
  }
  > .search-container {
    margin-bottom: 1rem;
    margin-left: 5px;
    > input {
      position: relative;
      margin-right: 1rem;
      width: 190px;
      height: 20px;
      border: solid 1px var(--togostanza-control-border-color);
      border-radius: calc(var(--togostanza-column-border-radius) * 1px);
    }
    > .search-wrapper {
      min-height: fit-content;
      max-height: 80%;
      display: flex;
      position: absolute;
      overflow: auto;
      border: solid 1px var(--togostanza-control-border-color);
      border-radius: 3px;
      z-index: 2;
      > .suggestions {
        margin: 0;
        padding: 0;
        overflow: auto;
        background-color: white;
        z-index: 1;
        > li {
          display: grid;
          padding: 0.8rem 1rem;
          list-style-type: none;
          position: relative;
          border-bottom: var(--togostanza-column-border);
          &:hover {
            background-color: var(--togostanza-hover-background-color);
            cursor: pointer;
          }
        }
      }
    }
  }
  > #tree {
    height: calc(var(--togostanza-column-height) * 1px);
    display: flex;
    width: fit-content;
    gap: calc(var(--togostanza-column-gap) * 1px);
    padding: 1px;
    > .column {
      overflow: auto;
      background-color: var(--togostanza-column-background-color);
      padding: calc(var(--togostanza-column-padding) * 1px);
      width: max-content;
      outline: 1px solid;
      outline-color: var(--togostanza-column-border-color);
      border-radius: calc(var(--togostanza-column-border-radius) * 1px);
      &.-fixed {
        width: calc(var(--togostanza-column-width) * 1px);
      }
      > .node {
        position: relative;
        display: grid;
        grid-template-columns: 1.5rem auto 1.5rem;
        align-items: center;
        border-radius: calc(var(--togostanza-node-border-radius) * 1px);
        padding-top: calc(var(--togostanza-node-padding-vertical) * 1px);
        padding-bottom: calc(var(--togostanza-node-padding-vertical) * 1px);
        padding-left: calc(var(--togostanza-node-padding-horizontal) * 1px);
        padding-right: calc(var(--togostanza-node-padding-horizontal) * 1px);
        > .label {
          &.-vertical {
            margin-left: 0.5rem;
          }
        }
        > .icon {
          align-self: center;
          justify-self: flex-end;
        }
        > input[type="checkbox"] {
          &:hover {
            cursor: pointer;
          }
        }
        &:first-child {
          border-top-left-radius: max(
            calc(var(--togostanza-column-border-radius) * 1px),
            calc(var(--togostanza-node-border-radius) * 1px)
          );
          border-top-right-radius: max(
            calc(var(--togostanza-column-border-radius) * 1px),
            calc(var(--togostanza-node-border-radius) * 1px)
          );
          &.-with-border:after {
            border-top: none;
          }
        }
        &:last-child {
          border-bottom-left-radius: max(
            calc(var(--togostanza-column-border-radius) * 1px),
            calc(var(--togostanza-node-border-radius) * 1px)
          );
          border-bottom-right-radius: max(
            calc(var(--togostanza-column-border-radius) * 1px),
            calc(var(--togostanza-node-border-radius) * 1px)
          );
        }
        &.-highlighted {
          background-color: var(--togostanza-selected-background-color);
          color: var(--togostanza-selected-text-color);
          > svg > path {
            color: var(--togostanza-selected-text-color);
          }
        }
        &:hover {
          background-color: var(--togostanza-hover-background-color);
          color: var(--togostanza-hover-text-color);
          cursor: pointer;
          > svg > path {
            color: var(--togostanza-hover-text-color);
          }
        }
      }
    }
  }
}
